{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\Receiver.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport download from \"downloadjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReceiverApp = () => {\n  _s();\n  const [roomID, setRoomID] = useState(\"\");\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\n  const [fileTransfers, setFileTransfers] = useState([]); // List to store details of all files\n\n  const socket = useRef(null);\n  const fileBufferRef = useRef(null);\n  const transmittedRef = useRef(0);\n  const fileMetadataRef = useRef(null);\n  useEffect(() => {\n    socket.current = io(\"http://localhost:5000\");\n    socket.current.on(\"file-meta\", metadata => {\n      console.log(\"Metadata received:\", metadata);\n      fileMetadataRef.current = metadata;\n      fileBufferRef.current = new Uint8Array(metadata.total_buffer_size);\n      transmittedRef.current = 0;\n\n      // Add new file metadata to the list\n      setFileTransfers(prevTransfers => [...prevTransfers, {\n        metadata,\n        progress: 0\n      }]);\n      socket.current.emit(\"fs-start\", {\n        uid: roomID\n      });\n    });\n    socket.current.on(\"file-raw\", ({\n      buffer\n    }) => {\n      const start = transmittedRef.current;\n      const end = start + buffer.byteLength;\n      fileBufferRef.current.set(new Uint8Array(buffer), start);\n      transmittedRef.current = end;\n      const progress = Math.trunc(transmittedRef.current / fileMetadataRef.current.total_buffer_size * 100);\n\n      // Update progress for the current file\n      setFileTransfers(prevTransfers => prevTransfers.map(transfer => transfer.metadata.filename === fileMetadataRef.current.filename ? {\n        ...transfer,\n        progress\n      } : transfer));\n      if (end >= fileMetadataRef.current.total_buffer_size) {\n        const blob = new Blob([fileBufferRef.current]);\n        download(blob, fileMetadataRef.current.filename);\n      } else {\n        socket.current.emit(\"fs-start\", {\n          uid: roomID\n        });\n      }\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, [roomID]);\n  const handleConnect = () => {\n    if (!roomID.trim()) return;\n    socket.current.emit(\"receiver-join\", {\n      uid: roomID\n    });\n    setActiveScreen(\"fs-screen\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    style: {\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    children: [activeScreen === \"join-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen join-screen active\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room ID\",\n        value: roomID,\n        onChange: e => setRoomID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnect,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), activeScreen === \"fs-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen fs-screen\",\n      style: {\n        color: 'black',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Receiving Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-list\",\n        children: fileTransfers.map((transfer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", transfer.metadata.filename]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Size: \", (transfer.metadata.total_buffer_size / 1024).toFixed(2), \" KB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Progress: \", transfer.progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ReceiverApp, \"SGiDzPgeQ9vgJtk/Wm4wgek9Hb4=\");\n_c = ReceiverApp;\nexport default ReceiverApp;\nvar _c;\n$RefreshReg$(_c, \"ReceiverApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","download","jsxDEV","_jsxDEV","ReceiverApp","_s","roomID","setRoomID","activeScreen","setActiveScreen","fileTransfers","setFileTransfers","socket","fileBufferRef","transmittedRef","fileMetadataRef","current","on","metadata","console","log","Uint8Array","total_buffer_size","prevTransfers","progress","emit","uid","buffer","start","end","byteLength","set","Math","trunc","map","transfer","filename","blob","Blob","disconnect","handleConnect","trim","className","style","justifyContent","alignContent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","color","textAlign","index","toFixed","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/Receiver.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport download from \"downloadjs\";\r\n\r\nconst ReceiverApp = () => {\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\r\n  const [fileTransfers, setFileTransfers] = useState([]); // List to store details of all files\r\n\r\n  const socket = useRef(null);\r\n  const fileBufferRef = useRef(null);\r\n  const transmittedRef = useRef(0);\r\n  const fileMetadataRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"http://localhost:5000\");\r\n\r\n    socket.current.on(\"file-meta\", (metadata) => {\r\n      console.log(\"Metadata received:\", metadata);\r\n      fileMetadataRef.current = metadata;\r\n      fileBufferRef.current = new Uint8Array(metadata.total_buffer_size);\r\n      transmittedRef.current = 0;\r\n\r\n      // Add new file metadata to the list\r\n      setFileTransfers((prevTransfers) => [\r\n        ...prevTransfers,\r\n        { metadata, progress: 0 },\r\n      ]);\r\n\r\n      socket.current.emit(\"fs-start\", { uid: roomID });\r\n    });\r\n\r\n    socket.current.on(\"file-raw\", ({ buffer }) => {\r\n      const start = transmittedRef.current;\r\n      const end = start + buffer.byteLength;\r\n\r\n      fileBufferRef.current.set(new Uint8Array(buffer), start);\r\n      transmittedRef.current = end;\r\n\r\n      const progress = Math.trunc(\r\n        (transmittedRef.current / fileMetadataRef.current.total_buffer_size) *\r\n          100\r\n      );\r\n\r\n      // Update progress for the current file\r\n      setFileTransfers((prevTransfers) =>\r\n        prevTransfers.map((transfer) =>\r\n          transfer.metadata.filename === fileMetadataRef.current.filename\r\n            ? { ...transfer, progress }\r\n            : transfer\r\n        )\r\n      );\r\n\r\n      if (end >= fileMetadataRef.current.total_buffer_size) {\r\n        const blob = new Blob([fileBufferRef.current]);\r\n        download(blob, fileMetadataRef.current.filename);\r\n      } else {\r\n        socket.current.emit(\"fs-start\", { uid: roomID });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, [roomID]);\r\n\r\n  const handleConnect = () => {\r\n    if (!roomID.trim()) return;\r\n    socket.current.emit(\"receiver-join\", { uid: roomID });\r\n    setActiveScreen(\"fs-screen\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\"style={{justifyContent: 'center', alignContent: 'center'}}>\r\n      {activeScreen === \"join-screen\" && (\r\n        <div className=\"screen join-screen active\">\r\n          <h2>Join a Room</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Room ID\"\r\n            value={roomID}\r\n            onChange={(e) => setRoomID(e.target.value)}\r\n          />\r\n          <button onClick={handleConnect} >Join</button>\r\n        </div>\r\n      )}\r\n\r\n      {activeScreen === \"fs-screen\" && (\r\n        <div className=\"screen fs-screen\" style={{ color: 'black', textAlign: 'center' }}>\r\n          <h2>Receiving Files</h2>\r\n          <div className=\"file-list\">\r\n            {fileTransfers.map((transfer, index) => (\r\n              <div key={index} className=\"file-details\">\r\n                <p>File Name: {transfer.metadata.filename}</p>\r\n                <p>File Size: {(transfer.metadata.total_buffer_size / 1024).toFixed(2)} KB</p>\r\n                <p>Progress: {transfer.progress}%</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReceiverApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}