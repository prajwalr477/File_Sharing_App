{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\FileShare.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './FileShare.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst serverURL = process.env.NODE_ENV === 'production' ? window.location.origin // Use the deployed website's origin in production\n: 'http://localhost:5000'; // Localhost for development\nconst socket = io(serverURL);\nconst FileShare = ({\n  addNotification\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [targetUser, setTargetUser] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState('');\n  const [dataChannel, setDataChannel] = useState(null);\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\n  const [receivedFileChunks, setReceivedFileChunks] = useState([]);\n  const [fileMetadata, setFileMetadata] = useState(null);\n  const [showConnectionPopup, setShowConnectionPopup] = useState(false);\n  const [connectionRequestSender, setConnectionRequestSender] = useState('');\n  const CHUNK_SIZE = 16384;\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server.');\n      updateStatus('Connected to server.');\n    });\n    socket.on('connection-request', ({\n      fromUsername\n    }) => {\n      setConnectionRequestSender(fromUsername);\n      setShowConnectionPopup(true);\n      updateStatus(`Connection request received from ${fromUsername}.`);\n    });\n    socket.on('new-notification', ({\n      sender,\n      message\n    }) => {\n      console.log(`Notification received: ${message} (from ${sender})`);\n      updateStatus(`Notification from ${sender}: ${message}`);\n    });\n    socket.on('connection-approved', ({\n      message\n    }) => {\n      updateStatus(message);\n      setIsConnected(true);\n    });\n    socket.on('connection-denied', ({\n      message\n    }) => {\n      updateStatus(message);\n    });\n    socket.on('startDataChannel', () => {\n      updateStatus('Data channel established. Ready for file transfer!');\n      setIsConnected(true);\n      setShowConnectionPopup(false);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('connection-request');\n      socket.off('new-notification');\n      socket.off('connection-approved');\n      socket.off('connection-denied');\n      socket.off('startDataChannel');\n    };\n  }, []);\n\n  // Utility function to update status and notify\n  const updateStatus = message => {\n    setStatus(message);\n    if (addNotification) {\n      addNotification(message); // Send the status update to notifications\n    }\n  };\n  const handleUsernameSubmit = async () => {\n    const response = await fetch(`${serverURL}/validate-user`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username\n      })\n    });\n    const result = await response.json();\n    if (result.message) {\n      socket.emit('register-user', username);\n      updateStatus('User registered successfully.');\n    } else {\n      updateStatus(result.error || 'Failed to validate user.');\n    }\n  };\n  const handleConnectionRequest = () => {\n    if (targetUser.trim() === '') {\n      updateStatus('Target username cannot be empty.');\n      return;\n    }\n    socket.emit('connection-request', {\n      toUsername: targetUser,\n      fromUsername: username\n    });\n    updateStatus(`Connection request sent to ${targetUser}.`);\n  };\n  const createOffer = async () => {\n    if (!file) {\n      updateStatus('Please select a file to share.');\n      return;\n    }\n    const channel = peerConnection.createDataChannel('fileTransfer');\n    setDataChannel(channel);\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    socket.emit('offer', {\n      offer,\n      toUsername: targetUser\n    });\n    updateStatus('Offer sent to initiate file transfer.');\n  };\n  const acceptConnection = () => {\n    socket.emit('connection-response', {\n      toUsername: connectionRequestSender,\n      accepted: true\n    });\n    updateStatus('Connection request accepted.');\n    setShowConnectionPopup(false);\n  };\n  const rejectConnection = () => {\n    socket.emit('connection-response', {\n      toUsername: connectionRequestSender,\n      accepted: false\n    });\n    updateStatus('Connection request rejected.');\n    setShowConnectionPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-share-container\",\n    children: [!isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"username-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUsernameSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"File Share App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter target username\",\n          value: targetUser,\n          onChange: e => setTargetUser(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConnectionRequest,\n          children: \"Send Connection Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createOffer,\n          children: \"Send File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true), showConnectionPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [connectionRequestSender, \" wants to connect.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: acceptConnection,\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rejectConnection,\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(FileShare, \"+hJBfU8UQu6PvkouJqqBQb/4ZlI=\");\n_c = FileShare;\nexport default FileShare;\nvar _c;\n$RefreshReg$(_c, \"FileShare\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","serverURL","process","env","NODE_ENV","window","location","origin","socket","FileShare","addNotification","_s","username","setUsername","targetUser","setTargetUser","isConnected","setIsConnected","file","setFile","status","setStatus","dataChannel","setDataChannel","peerConnection","setPeerConnection","RTCPeerConnection","receivedFileChunks","setReceivedFileChunks","fileMetadata","setFileMetadata","showConnectionPopup","setShowConnectionPopup","connectionRequestSender","setConnectionRequestSender","CHUNK_SIZE","on","console","log","updateStatus","fromUsername","sender","message","off","handleUsernameSubmit","response","fetch","method","headers","body","JSON","stringify","result","json","emit","error","handleConnectionRequest","trim","toUsername","createOffer","channel","createDataChannel","offer","setLocalDescription","acceptConnection","accepted","rejectConnection","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","files","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/FileShare.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport './FileShare.css';\r\n\r\nconst serverURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.origin // Use the deployed website's origin in production\r\n    : 'http://localhost:5000'; // Localhost for development\r\nconst socket = io(serverURL);\r\n\r\nconst FileShare = ({ addNotification }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [targetUser, setTargetUser] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [dataChannel, setDataChannel] = useState(null);\r\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\r\n  const [receivedFileChunks, setReceivedFileChunks] = useState([]);\r\n  const [fileMetadata, setFileMetadata] = useState(null);\r\n  const [showConnectionPopup, setShowConnectionPopup] = useState(false);\r\n  const [connectionRequestSender, setConnectionRequestSender] = useState('');\r\n  const CHUNK_SIZE = 16384;\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      console.log('Connected to server.');\r\n      updateStatus('Connected to server.');\r\n    });\r\n\r\n    socket.on('connection-request', ({ fromUsername }) => {\r\n      setConnectionRequestSender(fromUsername);\r\n      setShowConnectionPopup(true);\r\n      updateStatus(`Connection request received from ${fromUsername}.`);\r\n    });\r\n\r\n    socket.on('new-notification', ({ sender, message }) => {\r\n      console.log(`Notification received: ${message} (from ${sender})`);\r\n      updateStatus(`Notification from ${sender}: ${message}`);\r\n    });\r\n\r\n    socket.on('connection-approved', ({ message }) => {\r\n      updateStatus(message);\r\n      setIsConnected(true);\r\n    });\r\n\r\n    socket.on('connection-denied', ({ message }) => {\r\n      updateStatus(message);\r\n    });\r\n\r\n    socket.on('startDataChannel', () => {\r\n      updateStatus('Data channel established. Ready for file transfer!');\r\n      setIsConnected(true);\r\n      setShowConnectionPopup(false);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('connection-request');\r\n      socket.off('new-notification');\r\n      socket.off('connection-approved');\r\n      socket.off('connection-denied');\r\n      socket.off('startDataChannel');\r\n    };\r\n  }, []);\r\n\r\n  // Utility function to update status and notify\r\n  const updateStatus = (message) => {\r\n    setStatus(message);\r\n    if (addNotification) {\r\n      addNotification(message); // Send the status update to notifications\r\n    }\r\n  };\r\n\r\n  const handleUsernameSubmit = async () => {\r\n    const response = await fetch(`${serverURL}/validate-user`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username }),\r\n    });\r\n    const result = await response.json();\r\n\r\n    if (result.message) {\r\n      socket.emit('register-user', username);\r\n      updateStatus('User registered successfully.');\r\n    } else {\r\n      updateStatus(result.error || 'Failed to validate user.');\r\n    }\r\n  };\r\n\r\n  const handleConnectionRequest = () => {\r\n    if (targetUser.trim() === '') {\r\n      updateStatus('Target username cannot be empty.');\r\n      return;\r\n    }\r\n    socket.emit('connection-request', { toUsername: targetUser, fromUsername: username });\r\n    updateStatus(`Connection request sent to ${targetUser}.`);\r\n  };\r\n\r\n  const createOffer = async () => {\r\n    if (!file) {\r\n      updateStatus('Please select a file to share.');\r\n      return;\r\n    }\r\n\r\n    const channel = peerConnection.createDataChannel('fileTransfer');\r\n    setDataChannel(channel);\r\n\r\n    const offer = await peerConnection.createOffer();\r\n    await peerConnection.setLocalDescription(offer);\r\n\r\n    socket.emit('offer', { offer, toUsername: targetUser });\r\n    updateStatus('Offer sent to initiate file transfer.');\r\n  };\r\n\r\n  const acceptConnection = () => {\r\n    socket.emit('connection-response', { toUsername: connectionRequestSender, accepted: true });\r\n    updateStatus('Connection request accepted.');\r\n    setShowConnectionPopup(false);\r\n  };\r\n\r\n  const rejectConnection = () => {\r\n    socket.emit('connection-response', { toUsername: connectionRequestSender, accepted: false });\r\n    updateStatus('Connection request rejected.');\r\n    setShowConnectionPopup(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-share-container\">\r\n      {!isConnected ? (\r\n        <div className=\"username-modal\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <button onClick={handleUsernameSubmit}>Submit</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <h1>File Share App</h1>\r\n          <div className=\"file-input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter target username\"\r\n              value={targetUser}\r\n              onChange={(e) => setTargetUser(e.target.value)}\r\n            />\r\n            <button onClick={handleConnectionRequest}>Send Connection Request</button>\r\n          </div>\r\n          <div className=\"file-input\">\r\n            <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n            <button onClick={createOffer}>Send File</button>\r\n          </div>\r\n          {status && <p className=\"status-message\">{status}</p>}\r\n        </>\r\n      )}\r\n\r\n      {showConnectionPopup && (\r\n        <div className=\"connection-popup\">\r\n          <p>{connectionRequestSender} wants to connect.</p>\r\n          <button onClick={acceptConnection}>Accept</button>\r\n          <button onClick={rejectConnection}>Reject</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileShare;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}