{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\file-sharing-app\\\\client\\\\src\\\\FileShare\\\\FileShare.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './FileShare.css'; // Ensure you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Replace with your server URL\n\nconst FileShare = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\n  const [dataChannel, setDataChannel] = useState(null);\n  const [status, setStatus] = useState('');\n  const CHUNK_SIZE = 16384; // 16KB chunk size\n\n  useEffect(() => {\n    const channel = peerConnection.createDataChannel('fileTransfer');\n    channel.onopen = () => setStatus('Data channel is open.');\n    channel.onclose = () => setStatus('Data channel is closed.');\n    channel.onmessage = event => {\n      try {\n        if (event.data instanceof Blob) {\n          const receivedFile = event.data;\n          const link = document.createElement('a');\n          link.href = URL.createObjectURL(receivedFile);\n          link.download = 'received_file'; // Modify filename if needed\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          setStatus('File received successfully!');\n        }\n      } catch (error) {\n        console.error(\"Error receiving file:\", error);\n        setStatus('Error receiving file.');\n      }\n    };\n    setDataChannel(channel);\n    socket.on('offer', offer => {\n      peerConnection.setRemoteDescription(new RTCSessionDescription(offer)).catch(err => console.error(\"Failed to set remote description:\", err));\n      peerConnection.createAnswer().then(answer => {\n        peerConnection.setLocalDescription(answer);\n        socket.emit('answer', answer);\n      }).catch(err => console.error(\"Failed to create answer:\", err));\n    });\n    socket.on('answer', answer => {\n      peerConnection.setRemoteDescription(new RTCSessionDescription(answer)).catch(err => console.error(\"Failed to set remote description:\", err));\n    });\n    socket.on('ice-candidate', candidate => {\n      peerConnection.addIceCandidate(new RTCIceCandidate(candidate)).catch(err => console.error(\"Failed to add ICE candidate:\", err));\n    });\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit('ice-candidate', event.candidate);\n      }\n    };\n    return () => {\n      socket.off('offer');\n      socket.off('answer');\n      socket.off('ice-candidate');\n    };\n  }, [peerConnection]);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n    setStatus(''); // Reset status on file change\n  };\n  const sendFile = () => {\n    if (!file || !dataChannel) {\n      setStatus('No file selected or data channel not available.');\n      return;\n    }\n    const fileReader = new FileReader();\n    let offset = 0;\n    fileReader.onload = event => {\n      dataChannel.send(event.target.result);\n      offset += event.target.result.byteLength;\n      if (offset < file.size) {\n        sendNextChunk();\n      } else {\n        setStatus('File sent successfully!');\n        setFile(null); // Reset file input after sending\n      }\n    };\n    const sendNextChunk = () => {\n      const chunk = file.slice(offset, offset + CHUNK_SIZE);\n      fileReader.readAsArrayBuffer(chunk);\n    };\n    sendNextChunk(); // Start sending the first chunk\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-share-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Share App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendFile,\n        children: \"Send File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(FileShare, \"ieq45OrFvjmwc2Bn6YNaZg18I9E=\");\n_c = FileShare;\nexport default FileShare;\nvar _c;\n$RefreshReg$(_c, \"FileShare\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","FileShare","_s","file","setFile","peerConnection","setPeerConnection","RTCPeerConnection","dataChannel","setDataChannel","status","setStatus","CHUNK_SIZE","channel","createDataChannel","onopen","onclose","onmessage","event","data","Blob","receivedFile","link","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","error","console","on","offer","setRemoteDescription","RTCSessionDescription","catch","err","createAnswer","then","answer","setLocalDescription","emit","candidate","addIceCandidate","RTCIceCandidate","onicecandidate","off","handleFileChange","target","files","sendFile","fileReader","FileReader","offset","onload","send","result","byteLength","size","sendNextChunk","chunk","slice","readAsArrayBuffer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["F:/projects/file-sharing-app/client/src/FileShare/FileShare.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport './FileShare.css'; // Ensure you have a CSS file for styling\r\n\r\nconst socket = io('http://localhost:5000'); // Replace with your server URL\r\n\r\nconst FileShare = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\r\n  const [dataChannel, setDataChannel] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const CHUNK_SIZE = 16384; // 16KB chunk size\r\n\r\n  useEffect(() => {\r\n    const channel = peerConnection.createDataChannel('fileTransfer');\r\n    \r\n    channel.onopen = () => setStatus('Data channel is open.');\r\n    channel.onclose = () => setStatus('Data channel is closed.');\r\n\r\n    channel.onmessage = (event) => {\r\n      try {\r\n        if (event.data instanceof Blob) {\r\n          const receivedFile = event.data;\r\n          const link = document.createElement('a');\r\n          link.href = URL.createObjectURL(receivedFile);\r\n          link.download = 'received_file'; // Modify filename if needed\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          setStatus('File received successfully!');\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error receiving file:\", error);\r\n        setStatus('Error receiving file.');\r\n      }\r\n    };\r\n\r\n    setDataChannel(channel);\r\n\r\n    socket.on('offer', (offer) => {\r\n      peerConnection.setRemoteDescription(new RTCSessionDescription(offer))\r\n        .catch(err => console.error(\"Failed to set remote description:\", err));\r\n      peerConnection.createAnswer().then((answer) => {\r\n        peerConnection.setLocalDescription(answer);\r\n        socket.emit('answer', answer);\r\n      }).catch(err => console.error(\"Failed to create answer:\", err));\r\n    });\r\n\r\n    socket.on('answer', (answer) => {\r\n      peerConnection.setRemoteDescription(new RTCSessionDescription(answer))\r\n        .catch(err => console.error(\"Failed to set remote description:\", err));\r\n    });\r\n\r\n    socket.on('ice-candidate', (candidate) => {\r\n      peerConnection.addIceCandidate(new RTCIceCandidate(candidate))\r\n        .catch(err => console.error(\"Failed to add ICE candidate:\", err));\r\n    });\r\n\r\n    peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socket.emit('ice-candidate', event.candidate);\r\n      }\r\n    };\r\n\r\n    return () => {\r\n      socket.off('offer');\r\n      socket.off('answer');\r\n      socket.off('ice-candidate');\r\n    };\r\n  }, [peerConnection]);\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n    setStatus(''); // Reset status on file change\r\n  };\r\n\r\n  const sendFile = () => {\r\n    if (!file || !dataChannel) {\r\n      setStatus('No file selected or data channel not available.');\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    let offset = 0;\r\n\r\n    fileReader.onload = (event) => {\r\n      dataChannel.send(event.target.result);\r\n      offset += event.target.result.byteLength;\r\n\r\n      if (offset < file.size) {\r\n        sendNextChunk();\r\n      } else {\r\n        setStatus('File sent successfully!');\r\n        setFile(null); // Reset file input after sending\r\n      }\r\n    };\r\n\r\n    const sendNextChunk = () => {\r\n      const chunk = file.slice(offset, offset + CHUNK_SIZE);\r\n      fileReader.readAsArrayBuffer(chunk);\r\n    };\r\n\r\n    sendNextChunk(); // Start sending the first chunk\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-share-container\">\r\n      <h1>File Share App</h1>\r\n      <div className=\"file-input\">\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={sendFile}>Send File</button>\r\n      </div>\r\n      {status && <p className=\"status-message\">{status}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileShare;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}