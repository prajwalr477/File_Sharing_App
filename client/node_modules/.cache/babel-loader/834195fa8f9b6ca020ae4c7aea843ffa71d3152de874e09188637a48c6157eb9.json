{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\UserPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { socket } from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPrompt = () => {\n  _s();\n  const [friendUsername, setFriendUsername] = useState('');\n  const [status, setStatus] = useState('');\n\n  // Handle friend username change\n  const handleUsernameChange = e => {\n    setFriendUsername(e.target.value);\n  };\n\n  // Handle connect button click\n  const handleConnect = () => {\n    if (!friendUsername) {\n      setStatus('Please enter a valid username.');\n      return;\n    }\n    setStatus('Request sent, waiting for response...');\n    socket.emit('connect-request', {\n      username: friendUsername\n    });\n\n    // Listen for the response from the server\n    socket.on('user-status', response => {\n      if (response === 'offline') {\n        setStatus('User is not online.');\n      } else if (response === 'request-accepted') {\n        setStatus('Request accepted. Data channel established.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-prompt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Friend's Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: friendUsername,\n      onChange: handleUsernameChange,\n      placeholder: \"Friend's Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnect,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPrompt, \"LBVrnLtqLxfrreie4EG6KC3NU/E=\");\n_c = UserPrompt;\nexport default UserPrompt;\nvar _c;\n$RefreshReg$(_c, \"UserPrompt\");","map":{"version":3,"names":["React","useState","socket","jsxDEV","_jsxDEV","UserPrompt","_s","friendUsername","setFriendUsername","status","setStatus","handleUsernameChange","e","target","value","handleConnect","emit","username","on","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/UserPrompt.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { socket } from '../socket';\r\n\r\nconst UserPrompt = () => {\r\n  const [friendUsername, setFriendUsername] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  // Handle friend username change\r\n  const handleUsernameChange = (e) => {\r\n    setFriendUsername(e.target.value);\r\n  };\r\n\r\n  // Handle connect button click\r\n  const handleConnect = () => {\r\n    if (!friendUsername) {\r\n      setStatus('Please enter a valid username.');\r\n      return;\r\n    }\r\n\r\n    setStatus('Request sent, waiting for response...');\r\n    socket.emit('connect-request', { username: friendUsername });\r\n\r\n    // Listen for the response from the server\r\n    socket.on('user-status', (response) => {\r\n      if (response === 'offline') {\r\n        setStatus('User is not online.');\r\n      } else if (response === 'request-accepted') {\r\n        setStatus('Request accepted. Data channel established.');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-prompt-container\">\r\n      <h2>Enter Friend's Username</h2>\r\n      <input \r\n        type=\"text\" \r\n        value={friendUsername} \r\n        onChange={handleUsernameChange} \r\n        placeholder=\"Friend's Username\" \r\n      />\r\n      <button onClick={handleConnect}>Connect</button>\r\n      <p>{status}</p> {/* Display the status message */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPrompt;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMU,oBAAoB,GAAIC,CAAC,IAAK;IAClCJ,iBAAiB,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACR,cAAc,EAAE;MACnBG,SAAS,CAAC,gCAAgC,CAAC;MAC3C;IACF;IAEAA,SAAS,CAAC,uCAAuC,CAAC;IAClDR,MAAM,CAACc,IAAI,CAAC,iBAAiB,EAAE;MAAEC,QAAQ,EAAEV;IAAe,CAAC,CAAC;;IAE5D;IACAL,MAAM,CAACgB,EAAE,CAAC,aAAa,EAAGC,QAAQ,IAAK;MACrC,IAAIA,QAAQ,KAAK,SAAS,EAAE;QAC1BT,SAAS,CAAC,qBAAqB,CAAC;MAClC,CAAC,MAAM,IAAIS,QAAQ,KAAK,kBAAkB,EAAE;QAC1CT,SAAS,CAAC,6CAA6C,CAAC;MAC1D;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEN,OAAA;IAAKgB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCjB,OAAA;MAAAiB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXZ,KAAK,EAAEP,cAAe;MACtBoB,QAAQ,EAAEhB,oBAAqB;MAC/BiB,WAAW,EAAC;IAAmB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFrB,OAAA;MAAQyB,OAAO,EAAEd,aAAc;MAAAM,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChDrB,OAAA;MAAAiB,QAAA,EAAIZ;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1CID,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}