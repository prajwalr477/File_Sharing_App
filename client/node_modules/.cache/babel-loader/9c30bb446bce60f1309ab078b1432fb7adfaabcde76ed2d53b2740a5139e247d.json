{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*\nimport React, { useState } from 'react';\nimport './App.css';\nimport Auth from './pages/loginsignup/auth'; // Login/Signup component\nimport HomePage from './pages/Home'; // Home Page component\n\n\nfunction App() {\n  // State to track if the user is authenticated\n  \n    \n    \n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Function to handle successful login/signup\n  const handleAuthSuccess = () => {\n    setIsAuthenticated(true); // Set user as authenticated\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* Conditional Rendering \n        {!isAuthenticated ? (\n          <Auth onAuthSuccess={handleAuthSuccess} /> // Pass handler to Auth\n        ) : (\n          <main>\n            <HomePage />\n          </main>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n  */\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './pages/Home'; // Adjust path if needed\nimport FileShare from './FileShare/FileShare'; // Adjust path if needed\nimport Auth from './pages/loginsignup/auth'; // Authentication component\nimport Header from './components/Header'; // Shared header\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Handler for successful authentication\n  const handleAuthSuccess = () => {\n    setIsAuthenticated(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Auth, {\n      onAuthSuccess: handleAuthSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) // Show login/signup page if not authenticated\n    : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/fileshare\",\n          element: /*#__PURE__*/_jsxDEV(FileShare, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","HomePage","FileShare","Auth","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","handleAuthSuccess","children","onAuthSuccess","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/App.js"],"sourcesContent":["/*\nimport React, { useState } from 'react';\nimport './App.css';\nimport Auth from './pages/loginsignup/auth'; // Login/Signup component\nimport HomePage from './pages/Home'; // Home Page component\n\n\nfunction App() {\n  // State to track if the user is authenticated\n  \n    \n    \n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Function to handle successful login/signup\n  const handleAuthSuccess = () => {\n    setIsAuthenticated(true); // Set user as authenticated\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* Conditional Rendering \n        {!isAuthenticated ? (\n          <Auth onAuthSuccess={handleAuthSuccess} /> // Pass handler to Auth\n        ) : (\n          <main>\n            <HomePage />\n          </main>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n  */\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './pages/Home'; // Adjust path if needed\nimport FileShare from './FileShare/FileShare'; // Adjust path if needed\nimport Auth from './pages/loginsignup/auth'; // Authentication component\nimport Header from './components/Header'; // Shared header\n\nfunction App() {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    // Handler for successful authentication\n    const handleAuthSuccess = () => {\n        setIsAuthenticated(true);\n    };\n\n    return (\n        <Router>\n            {!isAuthenticated ? (\n                <Auth onAuthSuccess={handleAuthSuccess} /> // Show login/signup page if not authenticated\n            ) : (\n                <>\n                    <Header />\n                    <Routes>\n                        <Route path=\"/\" element={<HomePage />} />\n                        <Route path=\"/fileshare\" element={<FileShare />} />\n                        <Route path=\"*\" element={<Navigate to=\"/\" />} /> {/* Redirect unknown paths */}\n                    </Routes>\n                </>\n            )}\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,QAAQ,MAAM,cAAc,CAAC,CAAC;AACrC,OAAOC,SAAS,MAAM,uBAAuB,CAAC,CAAC;AAC/C,OAAOC,IAAI,MAAM,0BAA0B,CAAC,CAAC;AAC7C,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;IAC5BD,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,oBACIN,OAAA,CAACT,MAAM;IAAAiB,QAAA,EACF,CAACH,eAAe,gBACbL,OAAA,CAACH,IAAI;MAACY,aAAa,EAAEF;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAAA,eAE3Cb,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACIR,OAAA,CAACF,MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVb,OAAA,CAACR,MAAM;QAAAgB,QAAA,gBACHR,OAAA,CAACP,KAAK;UAACqB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEf,OAAA,CAACL,QAAQ;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzCb,OAAA,CAACP,KAAK;UAACqB,IAAI,EAAC,YAAY;UAACC,OAAO,eAAEf,OAAA,CAACJ,SAAS;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnDb,OAAA,CAACP,KAAK;UAACqB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEf,OAAA,CAACN,QAAQ;YAACsB,EAAE,EAAC;UAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA,eACX;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEjB;AAACT,EAAA,CAxBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}