{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\FileShare.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './FileShare.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst serverURL = process.env.NODE_ENV === 'production' ? window.location.origin // Use the deployed website's origin in production\n: 'http://localhost:5000'; // Localhost for development\nconst socket = io(serverURL); // Server URL\n\nconst FileShare = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [targetUser, setTargetUser] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState('');\n  const [dataChannel, setDataChannel] = useState(null);\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\n  const [receivedFileChunks, setReceivedFileChunks] = useState([]);\n  const [fileMetadata, setFileMetadata] = useState(null);\n  const [showConnectionPopup, setShowConnectionPopup] = useState(false); // State for showing connection popup\n  const [connectionRequestSender, setConnectionRequestSender] = useState(''); // Store username of the sender\n  const CHUNK_SIZE = 16384;\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server.');\n    });\n    socket.on('connection-request', fromUsername => {\n      // When a connection request is received, show the popup\n      setConnectionRequestSender(fromUsername);\n      setShowConnectionPopup(true);\n    });\n    socket.on('startDataChannel', () => {\n      setStatus('Data channel opened!');\n      setIsConnected(true);\n      setShowConnectionPopup(false); // Close the connection popup after the data channel is opened\n    });\n    return () => {\n      socket.off('connection-request');\n      socket.off('startDataChannel');\n    };\n  }, []);\n  const handleUsernameSubmit = async () => {\n    const response = await fetch('http://localhost:5000/validate-user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username\n      })\n    });\n    const result = await response.json();\n    if (result.success) {\n      socket.emit('register-user', username);\n      setStatus('User registered successfully.');\n    } else {\n      setStatus(result.error || 'Validation failed.');\n    }\n  };\n  const handleConnectionRequest = () => {\n    socket.emit('connection-request', targetUser);\n    setStatus(`Connection request sent to ${targetUser}.`);\n  };\n  const createOffer = async () => {\n    const channel = peerConnection.createDataChannel('fileTransfer');\n    setDataChannel(channel);\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    socket.emit('offer', {\n      offer,\n      targetUser\n    });\n    setStatus('Offer sent!');\n  };\n  const acceptConnection = () => {\n    socket.emit('accept-connection', connectionRequestSender);\n    setStatus('Connection accepted.');\n    setShowConnectionPopup(false);\n  };\n  const rejectConnection = () => {\n    setShowConnectionPopup(false);\n    setStatus('Connection request rejected.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-share-container\",\n    children: [!isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"username-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUsernameSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"File Share App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter target username\",\n          value: targetUser,\n          onChange: e => setTargetUser(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConnectionRequest,\n          children: \"Send Connection Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createOffer,\n          children: \"Send File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true), showConnectionPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [connectionRequestSender, \" wants to connect.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: acceptConnection,\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rejectConnection,\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(FileShare, \"+hJBfU8UQu6PvkouJqqBQb/4ZlI=\");\n_c = FileShare;\nexport default FileShare;\nvar _c;\n$RefreshReg$(_c, \"FileShare\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","serverURL","process","env","NODE_ENV","window","location","origin","socket","FileShare","_s","username","setUsername","targetUser","setTargetUser","isConnected","setIsConnected","file","setFile","status","setStatus","dataChannel","setDataChannel","peerConnection","setPeerConnection","RTCPeerConnection","receivedFileChunks","setReceivedFileChunks","fileMetadata","setFileMetadata","showConnectionPopup","setShowConnectionPopup","connectionRequestSender","setConnectionRequestSender","CHUNK_SIZE","on","console","log","fromUsername","off","handleUsernameSubmit","response","fetch","method","headers","body","JSON","stringify","result","json","success","emit","error","handleConnectionRequest","createOffer","channel","createDataChannel","offer","setLocalDescription","acceptConnection","rejectConnection","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","files","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/FileShare.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport './FileShare.css';\r\n\r\nconst serverURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.origin // Use the deployed website's origin in production\r\n    : 'http://localhost:5000'; // Localhost for development\r\nconst socket = io(serverURL); // Server URL\r\n\r\nconst FileShare = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [targetUser, setTargetUser] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [dataChannel, setDataChannel] = useState(null);\r\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\r\n  const [receivedFileChunks, setReceivedFileChunks] = useState([]);\r\n  const [fileMetadata, setFileMetadata] = useState(null);\r\n  const [showConnectionPopup, setShowConnectionPopup] = useState(false); // State for showing connection popup\r\n  const [connectionRequestSender, setConnectionRequestSender] = useState(''); // Store username of the sender\r\n  const CHUNK_SIZE = 16384;\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      console.log('Connected to server.');\r\n    });\r\n\r\n    socket.on('connection-request', (fromUsername) => {\r\n      // When a connection request is received, show the popup\r\n      setConnectionRequestSender(fromUsername);\r\n      setShowConnectionPopup(true);\r\n    });\r\n\r\n    socket.on('startDataChannel', () => {\r\n      setStatus('Data channel opened!');\r\n      setIsConnected(true);\r\n      setShowConnectionPopup(false); // Close the connection popup after the data channel is opened\r\n    });\r\n\r\n    return () => {\r\n      socket.off('connection-request');\r\n      socket.off('startDataChannel');\r\n    };\r\n  }, []);\r\n\r\n  const handleUsernameSubmit = async () => {\r\n    const response = await fetch('http://localhost:5000/validate-user', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username }),\r\n    });\r\n    const result = await response.json();\r\n\r\n    if (result.success) {\r\n      socket.emit('register-user', username);\r\n      setStatus('User registered successfully.');\r\n    } else {\r\n      setStatus(result.error || 'Validation failed.');\r\n    }\r\n  };\r\n\r\n  const handleConnectionRequest = () => {\r\n    socket.emit('connection-request', targetUser);\r\n    setStatus(`Connection request sent to ${targetUser}.`);\r\n  };\r\n\r\n  const createOffer = async () => {\r\n    const channel = peerConnection.createDataChannel('fileTransfer');\r\n    setDataChannel(channel);\r\n\r\n    const offer = await peerConnection.createOffer();\r\n    await peerConnection.setLocalDescription(offer);\r\n\r\n    socket.emit('offer', { offer, targetUser });\r\n    setStatus('Offer sent!');\r\n  };\r\n\r\n  const acceptConnection = () => {\r\n    socket.emit('accept-connection', connectionRequestSender);\r\n    setStatus('Connection accepted.');\r\n    setShowConnectionPopup(false);\r\n  };\r\n\r\n  const rejectConnection = () => {\r\n    setShowConnectionPopup(false);\r\n    setStatus('Connection request rejected.');\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-share-container\">\r\n      {!isConnected ? (\r\n        <div className=\"username-modal\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <button onClick={handleUsernameSubmit}>Submit</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <h1>File Share App</h1>\r\n          <div className=\"file-input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter target username\"\r\n              value={targetUser}\r\n              onChange={(e) => setTargetUser(e.target.value)}\r\n            />\r\n            <button onClick={handleConnectionRequest}>Send Connection Request</button>\r\n          </div>\r\n          <div className=\"file-input\">\r\n            <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n            <button onClick={createOffer}>Send File</button>\r\n          </div>\r\n          {status && <p className=\"status-message\">{status}</p>}\r\n        </>\r\n      )}\r\n\r\n      {/* Show Connection Request Popup if a request is received */}\r\n      {showConnectionPopup && (\r\n        <div className=\"connection-popup\">\r\n          <p>{connectionRequestSender} wants to connect.</p>\r\n          <button onClick={acceptConnection}>Accept</button>\r\n          <button onClick={rejectConnection}>Reject</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileShare;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}