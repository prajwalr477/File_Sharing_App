{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\UserPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000'); // Handle localhost and production\n\nconst UserPrompt = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [friendUsername, setFriendUsername] = useState('');\n  const [status, setStatus] = useState('');\n  const navigate = useNavigate();\n\n  // Register the user with the server\n  const registerUser = () => {\n    if (!username.trim()) {\n      setStatus('Please enter your username.');\n      return;\n    }\n    socket.emit('register-user', username);\n    setStatus(`You are registered as ${username}.`);\n  };\n\n  // Send a connection request to the friend\n  const handleConnectRequest = () => {\n    if (!friendUsername.trim()) {\n      setStatus('Please enter your friend\\'s username.');\n      return;\n    }\n    socket.emit('connection-request', {\n      toUsername: friendUsername,\n      fromUsername: username\n    });\n    setStatus(`Connection request sent to ${friendUsername}. Waiting for a response...`);\n  };\n\n  // Handle incoming connection requests\n  socket.on('connection-request', ({\n    fromUsername\n  }) => {\n    const confirmConnection = window.confirm(`${fromUsername} wants to connect. Accept?`);\n    socket.emit('connection-response', {\n      toUsername: fromUsername,\n      accepted: confirmConnection\n    });\n    if (confirmConnection) {\n      setStatus(`Connection with ${fromUsername} established! Redirecting...`);\n      navigate('/fileshare', {\n        state: {\n          username,\n          friendUsername\n        }\n      }); // Pass usernames to FileShare.js\n    } else {\n      setStatus(`You declined the connection request from ${fromUsername}.`);\n    }\n  });\n\n  // Handle connection response\n  socket.on('connection-approved', () => {\n    setStatus('Connection approved! Redirecting...');\n    navigate('/fileshare', {\n      state: {\n        username,\n        friendUsername\n      }\n    }); // Pass usernames to FileShare.js\n  });\n  socket.on('connection-denied', ({\n    message\n  }) => {\n    setStatus(message);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-prompt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to File Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Your Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Enter your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: registerUser,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Friend's Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: friendUsername,\n        onChange: e => setFriendUsername(e.target.value),\n        placeholder: \"Enter friend's username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnectRequest,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPrompt, \"BBwvYSz4vWWZF3f9/bveyiZj3Ac=\", false, function () {\n  return [useNavigate];\n});\n_c = UserPrompt;\nexport default UserPrompt;\nvar _c;\n$RefreshReg$(_c, \"UserPrompt\");","map":{"version":3,"names":["React","useState","useNavigate","io","jsxDEV","_jsxDEV","socket","process","env","REACT_APP_SOCKET_URL","UserPrompt","_s","username","setUsername","friendUsername","setFriendUsername","status","setStatus","navigate","registerUser","trim","emit","handleConnectRequest","toUsername","fromUsername","on","confirmConnection","window","confirm","accepted","state","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/UserPrompt.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000'); // Handle localhost and production\r\n\r\nconst UserPrompt = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [friendUsername, setFriendUsername] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Register the user with the server\r\n  const registerUser = () => {\r\n    if (!username.trim()) {\r\n      setStatus('Please enter your username.');\r\n      return;\r\n    }\r\n    socket.emit('register-user', username);\r\n    setStatus(`You are registered as ${username}.`);\r\n  };\r\n\r\n  // Send a connection request to the friend\r\n  const handleConnectRequest = () => {\r\n    if (!friendUsername.trim()) {\r\n      setStatus('Please enter your friend\\'s username.');\r\n      return;\r\n    }\r\n\r\n    socket.emit('connection-request', { toUsername: friendUsername, fromUsername: username });\r\n    setStatus(`Connection request sent to ${friendUsername}. Waiting for a response...`);\r\n  };\r\n\r\n  // Handle incoming connection requests\r\n  socket.on('connection-request', ({ fromUsername }) => {\r\n    const confirmConnection = window.confirm(`${fromUsername} wants to connect. Accept?`);\r\n    socket.emit('connection-response', { toUsername: fromUsername, accepted: confirmConnection });\r\n\r\n    if (confirmConnection) {\r\n      setStatus(`Connection with ${fromUsername} established! Redirecting...`);\r\n      navigate('/fileshare', { state: { username, friendUsername } }); // Pass usernames to FileShare.js\r\n    } else {\r\n      setStatus(`You declined the connection request from ${fromUsername}.`);\r\n    }\r\n  });\r\n\r\n  // Handle connection response\r\n  socket.on('connection-approved', () => {\r\n    setStatus('Connection approved! Redirecting...');\r\n    navigate('/fileshare', { state: { username, friendUsername } }); // Pass usernames to FileShare.js\r\n  });\r\n\r\n  socket.on('connection-denied', ({ message }) => {\r\n    setStatus(message);\r\n  });\r\n\r\n  return (\r\n    <div className=\"user-prompt-container\">\r\n      <h1>Welcome to File Share</h1>\r\n      <div>\r\n        <label>Your Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Enter your username\"\r\n        />\r\n        <button onClick={registerUser}>Register</button>\r\n      </div>\r\n      <div>\r\n        <label>Friend's Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={friendUsername}\r\n          onChange={(e) => setFriendUsername(e.target.value)}\r\n          placeholder=\"Enter friend's username\"\r\n        />\r\n        <button onClick={handleConnectRequest}>Connect</button>\r\n      </div>\r\n      {status && <p className=\"status-message\">{status}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPrompt;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}