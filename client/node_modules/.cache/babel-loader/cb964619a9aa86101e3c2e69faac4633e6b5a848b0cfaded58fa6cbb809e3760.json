{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\Receiver.jsx\",\n  _s = $RefreshSig$();\n// Receiver.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport download from \"downloadjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReceiverApp = () => {\n  _s();\n  const [senderID, setSenderID] = useState(\"\");\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\n  const [fileShare, setFileShare] = useState({\n    metadata: null,\n    transmitted: 0,\n    buffer: [],\n    progress: 0\n  });\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = io(\"http://localhost:5000\");\n\n    // Listen for 'fs-meta' event to receive file metadata\n    socket.current.on(\"fs-meta\", metadata => {\n      console.log(`Metadata received for Room ID: ${senderID}`);\n      setFileShare({\n        metadata,\n        transmitted: 0,\n        buffer: [],\n        progress: 0\n      });\n\n      // Emit 'fs-start' to request the first chunk\n      socket.current.emit(\"fs-start\", {\n        uid: senderID\n      });\n    });\n\n    // Listen for 'file-raw' event to receive file chunks\n    socket.current.on(\"file-raw\", ({\n      buffer\n    }) => {\n      console.log(`Chunk received, size: ${buffer.byteLength}`);\n      setFileShare(prev => {\n        const transmitted = prev.transmitted + buffer.byteLength;\n        const progress = Math.trunc(transmitted / prev.metadata.total_buffer_size * 100);\n        const newBuffer = new Uint8Array([...prev.buffer, ...buffer]);\n        if (transmitted >= prev.metadata.total_buffer_size) {\n          console.log(\"All chunks received; assembling file.\");\n          const blob = new Blob([newBuffer]);\n          download(blob, prev.metadata.filename);\n          return {\n            metadata: null,\n            transmitted: 0,\n            buffer: [],\n            progress: 0\n          };\n        }\n        return {\n          ...prev,\n          transmitted,\n          buffer: newBuffer,\n          progress\n        };\n      });\n\n      // Request the next chunk\n      socket.current.emit(\"fs-start\", {\n        uid: senderID\n      });\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, [senderID]);\n  const handleConnect = () => {\n    if (!senderID.trim()) return;\n    console.log(`Receiver connecting to Sender ID: ${senderID}`);\n    socket.current.emit(\"receiver-join\", {\n      uid: senderID\n    });\n    setActiveScreen(\"fs-screen\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [activeScreen === \"join-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen join-screen active\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Sender ID (Room ID)\",\n        value: senderID,\n        onChange: e => setSenderID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnect,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), activeScreen === \"fs-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen fs-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Receiving File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), fileShare.metadata && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: fileShare.metadata.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", fileShare.progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ReceiverApp, \"shiamyAJ8B0XDHa474MqqDNgip8=\");\n_c = ReceiverApp;\nexport default ReceiverApp;\nvar _c;\n$RefreshReg$(_c, \"ReceiverApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","download","jsxDEV","_jsxDEV","ReceiverApp","_s","senderID","setSenderID","activeScreen","setActiveScreen","fileShare","setFileShare","metadata","transmitted","buffer","progress","socket","current","on","console","log","emit","uid","byteLength","prev","Math","trunc","total_buffer_size","newBuffer","Uint8Array","blob","Blob","filename","disconnect","handleConnect","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/Receiver.jsx"],"sourcesContent":["// Receiver.jsx\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport download from \"downloadjs\";\r\n\r\nconst ReceiverApp = () => {\r\n  const [senderID, setSenderID] = useState(\"\");\r\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\r\n  const [fileShare, setFileShare] = useState({\r\n    metadata: null,\r\n    transmitted: 0,\r\n    buffer: [],\r\n    progress: 0,\r\n  });\r\n\r\n  const socket = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"http://localhost:5000\");\r\n\r\n    // Listen for 'fs-meta' event to receive file metadata\r\n    socket.current.on(\"fs-meta\", (metadata) => {\r\n      console.log(`Metadata received for Room ID: ${senderID}`);\r\n      setFileShare({\r\n        metadata,\r\n        transmitted: 0,\r\n        buffer: [],\r\n        progress: 0,\r\n      });\r\n\r\n      // Emit 'fs-start' to request the first chunk\r\n      socket.current.emit(\"fs-start\", { uid: senderID });\r\n    });\r\n\r\n    // Listen for 'file-raw' event to receive file chunks\r\n    socket.current.on(\"file-raw\", ({ buffer }) => {\r\n      console.log(`Chunk received, size: ${buffer.byteLength}`);\r\n      setFileShare((prev) => {\r\n        const transmitted = prev.transmitted + buffer.byteLength;\r\n        const progress = Math.trunc(\r\n          (transmitted / prev.metadata.total_buffer_size) * 100\r\n        );\r\n\r\n        const newBuffer = new Uint8Array([...prev.buffer, ...buffer]);\r\n        if (transmitted >= prev.metadata.total_buffer_size) {\r\n          console.log(\"All chunks received; assembling file.\");\r\n          const blob = new Blob([newBuffer]);\r\n          download(blob, prev.metadata.filename);\r\n          return { metadata: null, transmitted: 0, buffer: [], progress: 0 };\r\n        }\r\n\r\n        return {\r\n          ...prev,\r\n          transmitted,\r\n          buffer: newBuffer,\r\n          progress,\r\n        };\r\n      });\r\n\r\n      // Request the next chunk\r\n      socket.current.emit(\"fs-start\", { uid: senderID });\r\n    });\r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, [senderID]);\r\n\r\n  const handleConnect = () => {\r\n    if (!senderID.trim()) return;\r\n    console.log(`Receiver connecting to Sender ID: ${senderID}`);\r\n    socket.current.emit(\"receiver-join\", { uid: senderID });\r\n    setActiveScreen(\"fs-screen\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {activeScreen === \"join-screen\" && (\r\n        <div className=\"screen join-screen active\">\r\n          <h2>Join a Room</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Sender ID (Room ID)\"\r\n            value={senderID}\r\n            onChange={(e) => setSenderID(e.target.value)}\r\n          />\r\n          <button onClick={handleConnect}>Join</button>\r\n        </div>\r\n      )}\r\n\r\n      {activeScreen === \"fs-screen\" && (\r\n        <div className=\"screen fs-screen\">\r\n          <h2>Receiving File</h2>\r\n          {fileShare.metadata && (\r\n            <div>\r\n              <p>{fileShare.metadata.filename}</p>\r\n              <p>Progress: {fileShare.progress}%</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReceiverApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}