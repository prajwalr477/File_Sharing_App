{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\UserPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { socket } from '../socket'; // Assuming you have the socket initialized here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPrompt = () => {\n  _s();\n  const [friendUsername, setFriendUsername] = useState('');\n  const [status, setStatus] = useState('');\n  const navigate = useNavigate();\n\n  // Assuming you have a method to get the current logged-in user's username\n  const currentUsername = localStorage.getItem('username'); // Or use your state management for the logged-in user\n\n  const handleFriendUsernameChange = e => {\n    setFriendUsername(e.target.value);\n  };\n  const handleConnect = () => {\n    if (!friendUsername) {\n      setStatus('Please enter a valid username.');\n      return;\n    }\n\n    // Emit a request to connect with the friend's username\n    socket.emit('connection-request', {\n      from: currentUsername,\n      to: friendUsername\n    });\n\n    // Wait for confirmation of connection\n    socket.on('connection-accepted', message => {\n      setStatus('Connection established!');\n      navigate('/file-share'); // Navigate to the FileShare page when connection is accepted\n    });\n\n    // Handle connection rejection\n    socket.on('connection-rejected', message => {\n      setStatus(message || 'Connection request rejected.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-prompt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter your friend's username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: friendUsername,\n      onChange: handleFriendUsernameChange,\n      placeholder: \"Friend's username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnect,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPrompt, \"KhKUJnx/XC2J30oVDJXTA9peJdI=\", false, function () {\n  return [useNavigate];\n});\n_c = UserPrompt;\nexport default UserPrompt;\nvar _c;\n$RefreshReg$(_c, \"UserPrompt\");","map":{"version":3,"names":["React","useState","useNavigate","socket","jsxDEV","_jsxDEV","UserPrompt","_s","friendUsername","setFriendUsername","status","setStatus","navigate","currentUsername","localStorage","getItem","handleFriendUsernameChange","e","target","value","handleConnect","emit","from","to","on","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/UserPrompt.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { socket } from '../socket'; // Assuming you have the socket initialized here\r\n\r\nconst UserPrompt = () => {\r\n  const [friendUsername, setFriendUsername] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Assuming you have a method to get the current logged-in user's username\r\n  const currentUsername = localStorage.getItem('username'); // Or use your state management for the logged-in user\r\n\r\n  const handleFriendUsernameChange = (e) => {\r\n    setFriendUsername(e.target.value);\r\n  };\r\n\r\n  const handleConnect = () => {\r\n    if (!friendUsername) {\r\n      setStatus('Please enter a valid username.');\r\n      return;\r\n    }\r\n\r\n    // Emit a request to connect with the friend's username\r\n    socket.emit('connection-request', {\r\n      from: currentUsername,\r\n      to: friendUsername,\r\n    });\r\n\r\n    // Wait for confirmation of connection\r\n    socket.on('connection-accepted', (message) => {\r\n      setStatus('Connection established!');\r\n      navigate('/file-share'); // Navigate to the FileShare page when connection is accepted\r\n    });\r\n\r\n    // Handle connection rejection\r\n    socket.on('connection-rejected', (message) => {\r\n      setStatus(message || 'Connection request rejected.');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-prompt-container\">\r\n      <h2>Enter your friend's username</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={friendUsername}\r\n        onChange={handleFriendUsernameChange}\r\n        placeholder=\"Friend's username\"\r\n      />\r\n      <button onClick={handleConnect}>Connect</button>\r\n      {status && <p>{status}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPrompt;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMW,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;;EAE1D,MAAMC,0BAA0B,GAAIC,CAAC,IAAK;IACxCR,iBAAiB,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACZ,cAAc,EAAE;MACnBG,SAAS,CAAC,gCAAgC,CAAC;MAC3C;IACF;;IAEA;IACAR,MAAM,CAACkB,IAAI,CAAC,oBAAoB,EAAE;MAChCC,IAAI,EAAET,eAAe;MACrBU,EAAE,EAAEf;IACN,CAAC,CAAC;;IAEF;IACAL,MAAM,CAACqB,EAAE,CAAC,qBAAqB,EAAGC,OAAO,IAAK;MAC5Cd,SAAS,CAAC,yBAAyB,CAAC;MACpCC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;;IAEF;IACAT,MAAM,CAACqB,EAAE,CAAC,qBAAqB,EAAGC,OAAO,IAAK;MAC5Cd,SAAS,CAACc,OAAO,IAAI,8BAA8B,CAAC;IACtD,CAAC,CAAC;EACJ,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCtB,OAAA;MAAAsB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrC1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXb,KAAK,EAAEX,cAAe;MACtByB,QAAQ,EAAEjB,0BAA2B;MACrCkB,WAAW,EAAC;IAAmB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF1B,OAAA;MAAQ8B,OAAO,EAAEf,aAAc;MAAAO,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/CrB,MAAM,iBAAIL,OAAA;MAAAsB,QAAA,EAAIjB;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACxB,EAAA,CAjDID,UAAU;EAAA,QAGGJ,WAAW;AAAA;AAAAkC,EAAA,GAHxB9B,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}