{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\Receiver.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./Receiver.css\"; // Assuming styles.css is renamed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Receiver = () => {\n  _s();\n  const [senderID, setSenderID] = useState(\"\");\n  const [joinID, setJoinID] = useState(\"\"); // Unique receiver ID\n  const [fileShare, setFileShare] = useState({}); // Tracks the file transfer\n  const [filesList, setFilesList] = useState([]); // List of shared files\n  const [isConnected, setIsConnected] = useState(false); // Connection status\n\n  const socket = io(\"http://localhost:5000\"); // Update to match your backend URL\n\n  // Generate a unique ID for the receiver\n  const generateID = () => `${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}`;\n\n  // Handle connection initiation\n  const handleConnect = () => {\n    if (!senderID.trim()) return; // Ensure the sender ID is valid\n\n    const newJoinID = generateID();\n    setJoinID(newJoinID);\n\n    // Notify the backend that the receiver has joined\n    socket.emit(\"receiver-join\", {\n      uid: newJoinID,\n      sender_uid: senderID\n    });\n    setIsConnected(true);\n  };\n\n  // Manage incoming file metadata and chunks\n  useEffect(() => {\n    // Handle metadata reception\n    socket.on(\"fs-meta\", metadata => {\n      setFileShare({\n        metadata,\n        transmitted: 0,\n        buffer: []\n      });\n\n      // Add file metadata to the files list\n      setFilesList(prevFiles => [...prevFiles, {\n        filename: metadata.filename,\n        progress: 0\n      }]);\n\n      // Notify sender to start sharing\n      socket.emit(\"fs-start\", {\n        uid: senderID\n      });\n    });\n\n    // Handle incoming file chunks\n    socket.on(\"fs-share\", buffer => {\n      setFileShare(prev => {\n        const updatedFileShare = {\n          ...prev,\n          buffer: [...prev.buffer, buffer],\n          transmitted: prev.transmitted + buffer.byteLength\n        };\n\n        // Calculate and update progress\n        const progress = Math.trunc(updatedFileShare.transmitted / updatedFileShare.metadata.total_buffer_size * 100);\n\n        // Update progress in the file list\n        setFilesList(prevFiles => prevFiles.map(file => file.filename === updatedFileShare.metadata.filename ? {\n          ...file,\n          progress\n        } : file));\n\n        // If the file transfer is complete, download the file\n        if (updatedFileShare.transmitted === updatedFileShare.metadata.total_buffer_size) {\n          downloadFile(new Blob(updatedFileShare.buffer), updatedFileShare.metadata.filename);\n          return {}; // Reset fileShare after completion\n        } else {\n          // Request the next chunk\n          socket.emit(\"fs-start\", {\n            uid: senderID\n          });\n        }\n        return updatedFileShare;\n      });\n    });\n    return () => {\n      socket.off(\"fs-meta\");\n      socket.off(\"fs-share\");\n    };\n  }, [socket, senderID]);\n\n  // Download file helper\n  const downloadFile = (blob, filename) => {\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = filename;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen join-screen active\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Share your files securely\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"join-id\",\n            children: \"Join ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"join-id\",\n            value: senderID,\n            onChange: e => setSenderID(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"receiver-start-con-btn\",\n            onClick: handleConnect,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen fs-screen active\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Shared Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), filesList.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: [file.progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filename\",\n            children: file.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Receiver, \"gOl5+gdIdrjt1zoD/5KdnckKpHc=\");\n_c = Receiver;\nexport default Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Receiver","_s","senderID","setSenderID","joinID","setJoinID","fileShare","setFileShare","filesList","setFilesList","isConnected","setIsConnected","socket","generateID","Math","trunc","random","handleConnect","trim","newJoinID","emit","uid","sender_uid","on","metadata","transmitted","buffer","prevFiles","filename","progress","prev","updatedFileShare","byteLength","total_buffer_size","map","file","downloadFile","Blob","off","blob","link","document","createElement","href","URL","createObjectURL","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","index","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/Receiver.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport \"./Receiver.css\"; // Assuming styles.css is renamed\r\n\r\nconst Receiver = () => {\r\n  const [senderID, setSenderID] = useState(\"\");\r\n  const [joinID, setJoinID] = useState(\"\"); // Unique receiver ID\r\n  const [fileShare, setFileShare] = useState({}); // Tracks the file transfer\r\n  const [filesList, setFilesList] = useState([]); // List of shared files\r\n  const [isConnected, setIsConnected] = useState(false); // Connection status\r\n\r\n  const socket = io(\"http://localhost:5000\"); // Update to match your backend URL\r\n\r\n  // Generate a unique ID for the receiver\r\n  const generateID = () =>\r\n    `${Math.trunc(Math.random() * 999)}-${Math.trunc(\r\n      Math.random() * 999\r\n    )}-${Math.trunc(Math.random() * 999)}`;\r\n\r\n  // Handle connection initiation\r\n  const handleConnect = () => {\r\n    if (!senderID.trim()) return; // Ensure the sender ID is valid\r\n\r\n    const newJoinID = generateID();\r\n    setJoinID(newJoinID);\r\n\r\n    // Notify the backend that the receiver has joined\r\n    socket.emit(\"receiver-join\", {\r\n      uid: newJoinID,\r\n      sender_uid: senderID,\r\n    });\r\n\r\n    setIsConnected(true);\r\n  };\r\n\r\n  // Manage incoming file metadata and chunks\r\n  useEffect(() => {\r\n    // Handle metadata reception\r\n    socket.on(\"fs-meta\", (metadata) => {\r\n      setFileShare({\r\n        metadata,\r\n        transmitted: 0,\r\n        buffer: [],\r\n      });\r\n\r\n      // Add file metadata to the files list\r\n      setFilesList((prevFiles) => [\r\n        ...prevFiles,\r\n        { filename: metadata.filename, progress: 0 },\r\n      ]);\r\n\r\n      // Notify sender to start sharing\r\n      socket.emit(\"fs-start\", { uid: senderID });\r\n    });\r\n\r\n    // Handle incoming file chunks\r\n    socket.on(\"fs-share\", (buffer) => {\r\n      setFileShare((prev) => {\r\n        const updatedFileShare = {\r\n          ...prev,\r\n          buffer: [...prev.buffer, buffer],\r\n          transmitted: prev.transmitted + buffer.byteLength,\r\n        };\r\n\r\n        // Calculate and update progress\r\n        const progress = Math.trunc(\r\n          (updatedFileShare.transmitted /\r\n            updatedFileShare.metadata.total_buffer_size) *\r\n            100\r\n        );\r\n\r\n        // Update progress in the file list\r\n        setFilesList((prevFiles) =>\r\n          prevFiles.map((file) =>\r\n            file.filename === updatedFileShare.metadata.filename\r\n              ? { ...file, progress }\r\n              : file\r\n          )\r\n        );\r\n\r\n        // If the file transfer is complete, download the file\r\n        if (\r\n          updatedFileShare.transmitted ===\r\n          updatedFileShare.metadata.total_buffer_size\r\n        ) {\r\n          downloadFile(\r\n            new Blob(updatedFileShare.buffer),\r\n            updatedFileShare.metadata.filename\r\n          );\r\n          return {}; // Reset fileShare after completion\r\n        } else {\r\n          // Request the next chunk\r\n          socket.emit(\"fs-start\", { uid: senderID });\r\n        }\r\n\r\n        return updatedFileShare;\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"fs-meta\");\r\n      socket.off(\"fs-share\");\r\n    };\r\n  }, [socket, senderID]);\r\n\r\n  // Download file helper\r\n  const downloadFile = (blob, filename) => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = filename;\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {!isConnected ? (\r\n        <div className=\"screen join-screen active\">\r\n          <div className=\"form\">\r\n            <h2>Share your files securely</h2>\r\n            <div className=\"form-input\">\r\n              <label htmlFor=\"join-id\">Join ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"join-id\"\r\n                value={senderID}\r\n                onChange={(e) => setSenderID(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-input\">\r\n              <button id=\"receiver-start-con-btn\" onClick={handleConnect}>\r\n                Connect\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"screen fs-screen active\">\r\n          <div className=\"files-list\">\r\n            <div className=\"title\">Shared Files</div>\r\n            {filesList.map((file, index) => (\r\n              <div key={index} className=\"item\">\r\n                <div className=\"progress\">{file.progress}%</div>\r\n                <div className=\"filename\">{file.filename}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Receiver;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}