{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\FileShare.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport './FileShare.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SenderApp = () => {\n  _s();\n  const [joinID, setJoinID] = useState(\"\");\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\n  const [uploadedFiles, setUploadedFiles] = useState([]); // List to store all uploaded files\n\n  const socket = useRef(null);\n  const joinIDRef = useRef(\"\");\n  const fileBufferRef = useRef(null);\n  const PORT = process.env.PORT || 5000;\n  const socketUrl = process.env.NODE_ENV === 'production' ? `https://fileshare-copy1.onrender.com` : `http://localhost:${PORT}`;\n  useEffect(() => {\n    socket.current = io(`https://file-sharing-app-af8z.onrender.com`);\n    socket.current.on(\"init\", uid => {\n      console.log(`Receiver connected with ID: ${uid}`);\n      setActiveScreen(\"fs-screen\");\n    });\n    socket.current.on(\"fs-share\", () => {\n      console.log(\"Receiver requested file chunk. Sending next chunk...\");\n      sendNextChunk();\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, []);\n  const generateID = () => {\n    return `${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}`;\n  };\n  const handleCreateRoom = () => {\n    const newJoinID = generateID();\n    setJoinID(newJoinID);\n    joinIDRef.current = newJoinID;\n    socket.current.emit(\"sender-join\", {\n      uid: newJoinID\n    });\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) {\n      console.error(\"No file selected.\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = () => {\n      const buffer = new Uint8Array(reader.result);\n      fileBufferRef.current = buffer;\n\n      // Add the new file to the uploadedFiles list\n      setUploadedFiles(prevFiles => [...prevFiles, {\n        name: file.name,\n        size: file.size\n      }]);\n      console.log(\"File loaded and buffer set:\", buffer);\n      socket.current.emit(\"file-meta\", {\n        uid: joinIDRef.current,\n        metadata: {\n          filename: file.name,\n          total_buffer_size: buffer.length,\n          buffer_size: 1024\n        }\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const sendNextChunk = () => {\n    const chunkSize = 1024;\n    const fileBuffer = fileBufferRef.current;\n    if (!fileBuffer || fileBuffer.byteLength === 0) {\n      console.warn(\"No more chunks to send.\");\n      fileBufferRef.current = null; // Reset for the next file upload\n      return;\n    }\n    const chunk = fileBuffer.slice(0, chunkSize);\n    fileBufferRef.current = fileBuffer.slice(chunkSize);\n    socket.current.emit(\"file-raw\", {\n      uid: joinIDRef.current,\n      buffer: chunk\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [activeScreen === \"join-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen join-screen active\",\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateRoom,\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), joinID && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'black',\n          textAlign: 'center'\n        },\n        children: [\"Room ID: \", joinID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), activeScreen === \"fs-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen fs-screen\",\n      style: {\n        color: 'black',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Share Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files\",\n        style: {\n          color: 'black',\n          textAlign: 'center'\n        },\n        children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Size: \", (file.size / 1024).toFixed(2), \" KB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(SenderApp, \"9wuwUPT7dP2aZ06BNOqb/t3bBd4=\");\n_c = SenderApp;\nexport default SenderApp;\nvar _c;\n$RefreshReg$(_c, \"SenderApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","SenderApp","_s","joinID","setJoinID","activeScreen","setActiveScreen","uploadedFiles","setUploadedFiles","socket","joinIDRef","fileBufferRef","PORT","process","env","socketUrl","NODE_ENV","current","on","uid","console","log","sendNextChunk","disconnect","generateID","Math","trunc","random","handleCreateRoom","newJoinID","emit","handleFileChange","e","file","target","files","error","reader","FileReader","onload","buffer","Uint8Array","result","prevFiles","name","size","metadata","filename","total_buffer_size","length","buffer_size","readAsArrayBuffer","chunkSize","fileBuffer","byteLength","warn","chunk","slice","className","children","style","display","flexDirection","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","textAlign","type","onChange","map","index","toFixed","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/FileShare.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport './FileShare.css';\r\n\r\nconst SenderApp = () => {\r\n  const [joinID, setJoinID] = useState(\"\");\r\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\r\n  const [uploadedFiles, setUploadedFiles] = useState([]); // List to store all uploaded files\r\n\r\n  const socket = useRef(null);\r\n  const joinIDRef = useRef(\"\");\r\n  const fileBufferRef = useRef(null);\r\n  const PORT = process.env.PORT || 5000;\r\n  const socketUrl = process.env.NODE_ENV === 'production'\r\n  ? `https://fileshare-copy1.onrender.com`\r\n  : `http://localhost:${PORT}`;\r\n\r\n  useEffect(() => {\r\n    socket.current = io(`https://file-sharing-app-af8z.onrender.com`);\r\n\r\n    socket.current.on(\"init\", (uid) => {\r\n      console.log(`Receiver connected with ID: ${uid}`);\r\n      setActiveScreen(\"fs-screen\");\r\n    });\r\n\r\n    socket.current.on(\"fs-share\", () => {\r\n      console.log(\"Receiver requested file chunk. Sending next chunk...\");\r\n      sendNextChunk();\r\n    });\r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const generateID = () => {\r\n    return `${Math.trunc(Math.random() * 999)}-${Math.trunc(\r\n      Math.random() * 999\r\n    )}-${Math.trunc(Math.random() * 999)}`;\r\n  };\r\n\r\n  const handleCreateRoom = () => {\r\n    const newJoinID = generateID();\r\n    setJoinID(newJoinID);\r\n    joinIDRef.current = newJoinID;\r\n    socket.current.emit(\"sender-join\", { uid: newJoinID });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) {\r\n      console.error(\"No file selected.\");\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const buffer = new Uint8Array(reader.result);\r\n      fileBufferRef.current = buffer;\r\n\r\n      // Add the new file to the uploadedFiles list\r\n      setUploadedFiles((prevFiles) => [\r\n        ...prevFiles,\r\n        { name: file.name, size: file.size },\r\n      ]);\r\n\r\n      console.log(\"File loaded and buffer set:\", buffer);\r\n\r\n      socket.current.emit(\"file-meta\", {\r\n        uid: joinIDRef.current,\r\n        metadata: {\r\n          filename: file.name,\r\n          total_buffer_size: buffer.length,\r\n          buffer_size: 1024,\r\n        },\r\n      });\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const sendNextChunk = () => {\r\n    const chunkSize = 1024;\r\n    const fileBuffer = fileBufferRef.current;\r\n\r\n    if (!fileBuffer || fileBuffer.byteLength === 0) {\r\n      console.warn(\"No more chunks to send.\");\r\n      fileBufferRef.current = null; // Reset for the next file upload\r\n      return;\r\n    }\r\n\r\n    const chunk = fileBuffer.slice(0, chunkSize);\r\n    fileBufferRef.current = fileBuffer.slice(chunkSize);\r\n\r\n    socket.current.emit(\"file-raw\", {\r\n      uid: joinIDRef.current,\r\n      buffer: chunk,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {activeScreen === \"join-screen\" && (\r\n        <div className=\"screen join-screen active\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n          <h2>Create a Room</h2>\r\n          <button onClick={handleCreateRoom}>Create Room</button>\r\n          {joinID && <p style={{ color: 'black', textAlign: 'center' }}>Room ID: {joinID}</p>}\r\n        </div>\r\n      )}\r\n  \r\n      {activeScreen === \"fs-screen\" && (\r\n        <div className=\"screen fs-screen\" style={{ color: 'black', textAlign: 'center' }}>\r\n          <h2>Share Files</h2>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n  \r\n          <div className=\"uploaded-files\" style={{ color: 'black', textAlign: 'center' }}>\r\n            {uploadedFiles.map((file, index) => (\r\n              <div key={index} className=\"file-details\">\r\n                <p>File Name: {file.name}</p>\r\n                <p>File Size: {(file.size / 1024).toFixed(2)} KB</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default SenderApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}