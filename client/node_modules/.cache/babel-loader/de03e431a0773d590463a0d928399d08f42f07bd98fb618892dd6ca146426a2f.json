{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\App.js\";\n/*\nimport React, { useState } from 'react';\nimport './App.css';\nimport Auth from './pages/loginsignup/auth'; // Login/Signup component\nimport HomePage from './pages/Home'; // Home Page component\nimport FileShare from './FileShare/FileShare'\n\n\nfunction App() {\n  // State to track if the user is authenticated\n  \n    \n    \n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Function to handle successful login/signup\n  const handleAuthSuccess = () => {\n    setIsAuthenticated(true); // Set user as authenticated\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* Conditional Rendering \n        {!isAuthenticated ? (\n          <Auth onAuthSuccess={handleAuthSuccess} /> // Pass handler to Auth\n        ) : (\n          <main>\n            <FileShare />\n          </main>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n  */\n\nimport React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport HomePage from './pages/Home'; // Your components\nimport Auth from './pages/loginsignup/auth'; // Login/Auth page\nimport FileShare from './FileShare/FileShare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/home\",\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/fileshare\",\n      element: /*#__PURE__*/_jsxDEV(FileShare, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Routes","Route","HomePage","Auth","FileShare","jsxDEV","_jsxDEV","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/App.js"],"sourcesContent":["/*\nimport React, { useState } from 'react';\nimport './App.css';\nimport Auth from './pages/loginsignup/auth'; // Login/Signup component\nimport HomePage from './pages/Home'; // Home Page component\nimport FileShare from './FileShare/FileShare'\n\n\nfunction App() {\n  // State to track if the user is authenticated\n  \n    \n    \n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Function to handle successful login/signup\n  const handleAuthSuccess = () => {\n    setIsAuthenticated(true); // Set user as authenticated\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* Conditional Rendering \n        {!isAuthenticated ? (\n          <Auth onAuthSuccess={handleAuthSuccess} /> // Pass handler to Auth\n        ) : (\n          <main>\n            <FileShare />\n          </main>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n  */\n\n\n\n\n\n\nimport React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport HomePage from './pages/Home'; // Your components\nimport Auth from './pages/loginsignup/auth'; // Login/Auth page\nimport FileShare from './FileShare/FileShare';\n\nconst App = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Auth />} />\n      <Route path=\"/home\" element={<HomePage />} />\n      <Route path=\"/fileshare\" element={<FileShare />} />\n    </Routes>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,cAAc,CAAC,CAAC;AACrC,OAAOC,IAAI,MAAM,0BAA0B,CAAC,CAAC;AAC7C,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA,CAACN,MAAM;IAAAQ,QAAA,gBACLF,OAAA,CAACL,KAAK;MAACQ,IAAI,EAAC,GAAG;MAACC,OAAO,eAAEJ,OAAA,CAACH,IAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCR,OAAA,CAACL,KAAK;MAACQ,IAAI,EAAC,OAAO;MAACC,OAAO,eAAEJ,OAAA,CAACJ,QAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7CR,OAAA,CAACL,KAAK;MAACQ,IAAI,EAAC,YAAY;MAACC,OAAO,eAAEJ,OAAA,CAACF,SAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEb,CAAC;AAACC,EAAA,GARIR,GAAG;AAUT,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}