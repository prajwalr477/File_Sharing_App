{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\FileShare.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [joinID, setJoinID] = useState(\"\");\n  const [receiverID, setReceiverID] = useState(null);\n  const [sharedFiles, setSharedFiles] = useState([]);\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\n  const socket = io(\"http://localhost:5000\");\n  useEffect(() => {\n    const handleFileTransfer = () => {\n      const activeFile = sharedFiles[0]; // Assume the first file in the list is being shared\n      if (activeFile && activeFile.buffer) {\n        let {\n          buffer,\n          metadata\n        } = activeFile;\n        let chunk = buffer.slice(0, metadata.buffer_size);\n        buffer = buffer.slice(metadata.buffer_size, buffer.length);\n        const progress = Math.trunc((metadata.total_buffer_size - buffer.length) / metadata.total_buffer_size * 100);\n        setSharedFiles(prev => prev.map(f => f.filename === activeFile.filename ? {\n          ...f,\n          progress,\n          buffer\n        } : f));\n        if (chunk.length !== 0) {\n          socket.emit(\"file-raw\", {\n            uid: receiverID,\n            buffer: chunk\n          });\n        }\n      }\n    };\n    socket.on(\"init\", uid => {\n      setReceiverID(uid);\n      setActiveScreen(\"fs-screen\");\n    });\n    socket.on(\"fs-share\", handleFileTransfer);\n    return () => {\n      socket.off(\"init\");\n      socket.off(\"fs-share\");\n    };\n  }, [sharedFiles, receiverID]);\n  const generateID = () => {\n    return `${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}`;\n  };\n  const handleCreateRoom = () => {\n    const id = generateID();\n    setJoinID(id);\n    socket.emit(\"sender-join\", {\n      uid: id\n    });\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      const buffer = new Uint8Array(reader.result);\n      const fileMeta = {\n        filename: file.name,\n        total_buffer_size: buffer.length,\n        buffer_size: 1024\n      };\n      const newFile = {\n        filename: file.name,\n        progress: 0,\n        metadata: fileMeta,\n        buffer\n      };\n      setSharedFiles(prev => [...prev, newFile]);\n      socket.emit(\"file-meta\", {\n        uid: receiverID,\n        metadata: fileMeta\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [activeScreen === \"join-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen join-screen active\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Share your files Securely\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"sender-start-con-btn\",\n            onClick: handleCreateRoom,\n            children: \"Create room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          id: \"join-id\",\n          children: joinID && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Room ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: joinID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), activeScreen === \"fs-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen fs-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          children: \"Click here to select files for sharing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file-input\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Shared Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), sharedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: [file.progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filename\",\n            children: file.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cJ8Iazbb7JGiShN5PRoVEP7ZS2I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","joinID","setJoinID","receiverID","setReceiverID","sharedFiles","setSharedFiles","activeScreen","setActiveScreen","socket","handleFileTransfer","activeFile","buffer","metadata","chunk","slice","buffer_size","length","progress","Math","trunc","total_buffer_size","prev","map","f","filename","emit","uid","on","off","generateID","random","handleCreateRoom","id","handleFileChange","e","file","target","files","reader","FileReader","onload","Uint8Array","result","fileMeta","name","newFile","readAsArrayBuffer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","type","onChange","index","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/FileShare.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst App = () => {\r\n  const [joinID, setJoinID] = useState(\"\");\r\n  const [receiverID, setReceiverID] = useState(null);\r\n  const [sharedFiles, setSharedFiles] = useState([]);\r\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\r\n\r\n  const socket = io(\"http://localhost:5000\");\r\n\r\n  useEffect(() => {\r\n    const handleFileTransfer = () => {\r\n      const activeFile = sharedFiles[0]; // Assume the first file in the list is being shared\r\n      if (activeFile && activeFile.buffer) {\r\n        let { buffer, metadata } = activeFile;\r\n\r\n        let chunk = buffer.slice(0, metadata.buffer_size);\r\n        buffer = buffer.slice(metadata.buffer_size, buffer.length);\r\n\r\n        const progress = Math.trunc(\r\n          ((metadata.total_buffer_size - buffer.length) /\r\n            metadata.total_buffer_size) *\r\n            100\r\n        );\r\n        setSharedFiles((prev) =>\r\n          prev.map((f) =>\r\n            f.filename === activeFile.filename\r\n              ? { ...f, progress, buffer }\r\n              : f\r\n          )\r\n        );\r\n\r\n        if (chunk.length !== 0) {\r\n          socket.emit(\"file-raw\", { uid: receiverID, buffer: chunk });\r\n        }\r\n      }\r\n    };\r\n\r\n    socket.on(\"init\", (uid) => {\r\n      setReceiverID(uid);\r\n      setActiveScreen(\"fs-screen\");\r\n    });\r\n\r\n    socket.on(\"fs-share\", handleFileTransfer);\r\n\r\n    return () => {\r\n      socket.off(\"init\");\r\n      socket.off(\"fs-share\");\r\n    };\r\n  }, [sharedFiles, receiverID]);\r\n\r\n  const generateID = () => {\r\n    return `${Math.trunc(Math.random() * 999)}-${Math.trunc(\r\n      Math.random() * 999\r\n    )}-${Math.trunc(Math.random() * 999)}`;\r\n  };\r\n\r\n  const handleCreateRoom = () => {\r\n    const id = generateID();\r\n    setJoinID(id);\r\n    socket.emit(\"sender-join\", { uid: id });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const buffer = new Uint8Array(reader.result);\r\n      const fileMeta = {\r\n        filename: file.name,\r\n        total_buffer_size: buffer.length,\r\n        buffer_size: 1024,\r\n      };\r\n      const newFile = {\r\n        filename: file.name,\r\n        progress: 0,\r\n        metadata: fileMeta,\r\n        buffer,\r\n      };\r\n      setSharedFiles((prev) => [...prev, newFile]);\r\n\r\n      socket.emit(\"file-meta\", { uid: receiverID, metadata: fileMeta });\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* Join Screen */}\r\n      {activeScreen === \"join-screen\" && (\r\n        <div className=\"screen join-screen active\">\r\n          <div className=\"form\">\r\n            <h2>Share your files Securely</h2>\r\n            <div className=\"form-input\">\r\n              <button id=\"sender-start-con-btn\" onClick={handleCreateRoom}>\r\n                Create room\r\n              </button>\r\n            </div>\r\n            <div className=\"form-input\" id=\"join-id\">\r\n              {joinID && (\r\n                <>\r\n                  <b>Room ID</b>\r\n                  <span>{joinID}</span>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* File Sharing Screen */}\r\n      {activeScreen === \"fs-screen\" && (\r\n        <div className=\"screen fs-screen\">\r\n          <div className=\"file-input\">\r\n            <label htmlFor=\"file-input\">\r\n              Click here to select files for sharing\r\n            </label>\r\n            <input type=\"file\" id=\"file-input\" onChange={handleFileChange} />\r\n          </div>\r\n          <div className=\"files-list\">\r\n            <div className=\"title\">Shared Files</div>\r\n            {sharedFiles.map((file, index) => (\r\n              <div key={index} className=\"item\">\r\n                <div className=\"progress\">{file.progress}%</div>\r\n                <div className=\"filename\">{file.filename}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}