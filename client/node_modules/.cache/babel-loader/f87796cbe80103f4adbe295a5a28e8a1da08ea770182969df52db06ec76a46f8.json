{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\Receiver.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReceiverApp = () => {\n  _s();\n  const [roomID, setRoomID] = useState(\"\");\n  const [fileMeta, setFileMeta] = useState(null);\n  const [fileBuffer, setFileBuffer] = useState([]);\n  const [receivedSize, setReceivedSize] = useState(0);\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = io(\"http://localhost:5000\");\n\n    // Connect to room\n    socket.current.on(\"file-meta\", metadata => {\n      console.log(`Metadata received for Room ID: ${metadata.uid}`);\n      setFileMeta(metadata);\n      setFileBuffer([]); // Initialize file buffer\n      setReceivedSize(0); // Reset size tracker\n      socket.current.emit(\"fs-start\", {\n        uid: metadata.uid\n      });\n    });\n\n    // Handle receiving chunks\n    socket.current.on(\"file-raw\", data => {\n      console.log(`Received chunk of size: ${data.buffer.byteLength}`);\n      setFileBuffer(prevBuffer => {\n        const newBuffer = [...prevBuffer, ...data.buffer];\n        const totalReceived = receivedSize + data.buffer.byteLength;\n\n        // Check for overflow\n        if (totalReceived > fileMeta.total_buffer_size) {\n          console.error(\"Buffer overflow detected!\");\n          alert(\"Error: File transfer failed due to buffer mismatch.\");\n          socket.current.emit(\"fs-error\", {\n            uid: roomID\n          });\n          return prevBuffer; // Do not update buffer\n        }\n        setReceivedSize(totalReceived);\n\n        // If file is fully received, save it\n        if (totalReceived === fileMeta.total_buffer_size) {\n          console.log(\"File transfer completed!\");\n          saveFile(newBuffer, fileMeta.filename);\n        }\n        return newBuffer;\n      });\n\n      // Request the next chunk\n      socket.current.emit(\"fs-share\", {\n        uid: data.uid\n      });\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, [receivedSize, fileMeta, roomID]);\n  const handleJoinRoom = () => {\n    if (!roomID) {\n      alert(\"Please enter a valid Room ID.\");\n      return;\n    }\n    console.log(`Connecting to Room ID: ${roomID}`);\n    socket.current.emit(\"receiver-join\", {\n      uid: roomID\n    });\n  };\n  const saveFile = (buffer, filename) => {\n    const blob = new Blob([new Uint8Array(buffer)]);\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = filename;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [!fileMeta && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: roomID,\n        onChange: e => setRoomID(e.target.value),\n        placeholder: \"Enter Room ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoinRoom,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), fileMeta && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Receiving File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Filename: \", fileMeta.filename]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Progress:\", \" \", (receivedSize / fileMeta.total_buffer_size * 100).toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ReceiverApp, \"SWefUCNRvjx7b5NERN5nJp524ac=\");\n_c = ReceiverApp;\nexport default ReceiverApp;\nvar _c;\n$RefreshReg$(_c, \"ReceiverApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","ReceiverApp","_s","roomID","setRoomID","fileMeta","setFileMeta","fileBuffer","setFileBuffer","receivedSize","setReceivedSize","socket","current","on","metadata","console","log","uid","emit","data","buffer","byteLength","prevBuffer","newBuffer","totalReceived","total_buffer_size","error","alert","saveFile","filename","disconnect","handleJoinRoom","blob","Blob","Uint8Array","link","document","createElement","href","URL","createObjectURL","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","toFixed","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/Receiver.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst ReceiverApp = () => {\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [fileMeta, setFileMeta] = useState(null);\r\n  const [fileBuffer, setFileBuffer] = useState([]);\r\n  const [receivedSize, setReceivedSize] = useState(0);\r\n  const socket = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"http://localhost:5000\");\r\n\r\n    // Connect to room\r\n    socket.current.on(\"file-meta\", (metadata) => {\r\n      console.log(`Metadata received for Room ID: ${metadata.uid}`);\r\n      setFileMeta(metadata);\r\n      setFileBuffer([]); // Initialize file buffer\r\n      setReceivedSize(0); // Reset size tracker\r\n      socket.current.emit(\"fs-start\", { uid: metadata.uid });\r\n    });\r\n\r\n    // Handle receiving chunks\r\n    socket.current.on(\"file-raw\", (data) => {\r\n      console.log(`Received chunk of size: ${data.buffer.byteLength}`);\r\n\r\n      setFileBuffer((prevBuffer) => {\r\n        const newBuffer = [...prevBuffer, ...data.buffer];\r\n        const totalReceived = receivedSize + data.buffer.byteLength;\r\n\r\n        // Check for overflow\r\n        if (totalReceived > fileMeta.total_buffer_size) {\r\n          console.error(\"Buffer overflow detected!\");\r\n          alert(\"Error: File transfer failed due to buffer mismatch.\");\r\n          socket.current.emit(\"fs-error\", { uid: roomID });\r\n          return prevBuffer; // Do not update buffer\r\n        }\r\n\r\n        setReceivedSize(totalReceived);\r\n\r\n        // If file is fully received, save it\r\n        if (totalReceived === fileMeta.total_buffer_size) {\r\n          console.log(\"File transfer completed!\");\r\n          saveFile(newBuffer, fileMeta.filename);\r\n        }\r\n\r\n        return newBuffer;\r\n      });\r\n\r\n      // Request the next chunk\r\n      socket.current.emit(\"fs-share\", { uid: data.uid });\r\n    });\r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, [receivedSize, fileMeta, roomID]);\r\n\r\n  const handleJoinRoom = () => {\r\n    if (!roomID) {\r\n      alert(\"Please enter a valid Room ID.\");\r\n      return;\r\n    }\r\n    console.log(`Connecting to Room ID: ${roomID}`);\r\n    socket.current.emit(\"receiver-join\", { uid: roomID });\r\n  };\r\n\r\n  const saveFile = (buffer, filename) => {\r\n    const blob = new Blob([new Uint8Array(buffer)]);\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = filename;\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {!fileMeta && (\r\n        <div className=\"join-screen\">\r\n          <h2>Join a Room</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={roomID}\r\n            onChange={(e) => setRoomID(e.target.value)}\r\n            placeholder=\"Enter Room ID\"\r\n          />\r\n          <button onClick={handleJoinRoom}>Join Room</button>\r\n        </div>\r\n      )}\r\n\r\n      {fileMeta && (\r\n        <div className=\"transfer-screen\">\r\n          <h2>Receiving File</h2>\r\n          <p>Filename: {fileMeta.filename}</p>\r\n          <p>\r\n            Progress:{\" \"}\r\n            {((receivedSize / fileMeta.total_buffer_size) * 100).toFixed(2)}%\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReceiverApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}