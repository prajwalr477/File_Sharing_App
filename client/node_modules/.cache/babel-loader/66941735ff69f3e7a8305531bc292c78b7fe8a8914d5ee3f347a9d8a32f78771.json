{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\Receiver.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport download from \"downloadjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReceiverApp = () => {\n  _s();\n  const [roomID, setRoomID] = useState(\"\");\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\n  const [fileShare, setFileShare] = useState({\n    metadata: null,\n    transmitted: 0,\n    buffer: new Uint8Array(0),\n    // Initialize buffer as an empty Uint8Array\n    progress: 0\n  });\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = io(\"http://localhost:5000\");\n\n    // Handle metadata reception\n    socket.current.on(\"file-meta\", metadata => {\n      console.log(`Metadata received for Room ID: ${roomID}`);\n      setFileShare({\n        metadata,\n        transmitted: 0,\n        buffer: new Uint8Array(metadata.total_buffer_size),\n        // Preallocate buffer\n        progress: 0\n      });\n\n      // Request the first file chunk\n      socket.current.emit(\"fs-start\", {\n        uid: roomID\n      });\n    });\n\n    // Handle file chunks\n    socket.current.on(\"file-raw\", ({\n      buffer\n    }) => {\n      console.log(`Received chunk of size: ${buffer.byteLength}`);\n      setFileShare(prev => {\n        const newBuffer = new Uint8Array(prev.buffer);\n        newBuffer.set(new Uint8Array(buffer), prev.transmitted); // Merge the new chunk into the buffer\n\n        const transmitted = prev.transmitted + buffer.byteLength;\n        const progress = Math.trunc(transmitted / prev.metadata.total_buffer_size * 100);\n        if (transmitted >= prev.metadata.total_buffer_size) {\n          console.log(\"File received completely. Downloading...\");\n          const blob = new Blob([newBuffer]);\n          download(blob, prev.metadata.filename);\n          return {\n            metadata: null,\n            transmitted: 0,\n            buffer: new Uint8Array(0),\n            progress: 0\n          };\n        }\n        return {\n          ...prev,\n          transmitted,\n          buffer: newBuffer,\n          progress\n        };\n      });\n\n      // Request the next chunk\n      socket.current.emit(\"fs-start\", {\n        uid: roomID\n      });\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, [roomID]);\n  const handleConnect = () => {\n    if (!roomID.trim()) return;\n    console.log(`Receiver connecting to Room ID: ${roomID}`);\n    socket.current.emit(\"receiver-join\", {\n      uid: roomID\n    });\n    setActiveScreen(\"fs-screen\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [activeScreen === \"join-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen join-screen active\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room ID\",\n        value: roomID,\n        onChange: e => setRoomID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnect,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), activeScreen === \"fs-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen fs-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Receiving File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), fileShare.metadata && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: fileShare.metadata.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", fileShare.progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ReceiverApp, \"fF3BCJk/Zw0DRiIPL/v6uGPL9io=\");\n_c = ReceiverApp;\nexport default ReceiverApp;\nvar _c;\n$RefreshReg$(_c, \"ReceiverApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","download","jsxDEV","_jsxDEV","ReceiverApp","_s","roomID","setRoomID","activeScreen","setActiveScreen","fileShare","setFileShare","metadata","transmitted","buffer","Uint8Array","progress","socket","current","on","console","log","total_buffer_size","emit","uid","byteLength","prev","newBuffer","set","Math","trunc","blob","Blob","filename","disconnect","handleConnect","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/Receiver.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport download from \"downloadjs\";\r\n\r\nconst ReceiverApp = () => {\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\r\n  const [fileShare, setFileShare] = useState({\r\n    metadata: null,\r\n    transmitted: 0,\r\n    buffer: new Uint8Array(0), // Initialize buffer as an empty Uint8Array\r\n    progress: 0,\r\n  });\r\n\r\n  const socket = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"http://localhost:5000\");\r\n\r\n    // Handle metadata reception\r\n    socket.current.on(\"file-meta\", (metadata) => {\r\n      console.log(`Metadata received for Room ID: ${roomID}`);\r\n      setFileShare({\r\n        metadata,\r\n        transmitted: 0,\r\n        buffer: new Uint8Array(metadata.total_buffer_size), // Preallocate buffer\r\n        progress: 0,\r\n      });\r\n\r\n      // Request the first file chunk\r\n      socket.current.emit(\"fs-start\", { uid: roomID });\r\n    });\r\n\r\n    // Handle file chunks\r\n    socket.current.on(\"file-raw\", ({ buffer }) => {\r\n      console.log(`Received chunk of size: ${buffer.byteLength}`);\r\n\r\n      setFileShare((prev) => {\r\n        const newBuffer = new Uint8Array(prev.buffer);\r\n        newBuffer.set(new Uint8Array(buffer), prev.transmitted); // Merge the new chunk into the buffer\r\n\r\n        const transmitted = prev.transmitted + buffer.byteLength;\r\n        const progress = Math.trunc(\r\n          (transmitted / prev.metadata.total_buffer_size) * 100\r\n        );\r\n\r\n        if (transmitted >= prev.metadata.total_buffer_size) {\r\n          console.log(\"File received completely. Downloading...\");\r\n          const blob = new Blob([newBuffer]);\r\n          download(blob, prev.metadata.filename);\r\n          return { metadata: null, transmitted: 0, buffer: new Uint8Array(0), progress: 0 };\r\n        }\r\n\r\n        return {\r\n          ...prev,\r\n          transmitted,\r\n          buffer: newBuffer,\r\n          progress,\r\n        };\r\n      });\r\n\r\n      // Request the next chunk\r\n      socket.current.emit(\"fs-start\", { uid: roomID });\r\n    });\r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, [roomID]);\r\n\r\n  const handleConnect = () => {\r\n    if (!roomID.trim()) return;\r\n    console.log(`Receiver connecting to Room ID: ${roomID}`);\r\n    socket.current.emit(\"receiver-join\", { uid: roomID });\r\n    setActiveScreen(\"fs-screen\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {activeScreen === \"join-screen\" && (\r\n        <div className=\"screen join-screen active\">\r\n          <h2>Join a Room</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Room ID\"\r\n            value={roomID}\r\n            onChange={(e) => setRoomID(e.target.value)}\r\n          />\r\n          <button onClick={handleConnect}>Join</button>\r\n        </div>\r\n      )}\r\n\r\n      {activeScreen === \"fs-screen\" && (\r\n        <div className=\"screen fs-screen\">\r\n          <h2>Receiving File</h2>\r\n          {fileShare.metadata && (\r\n            <div>\r\n              <p>{fileShare.metadata.filename}</p>\r\n              <p>Progress: {fileShare.progress}%</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReceiverApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}