{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\FileShare.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './FileShare.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst serverURL = process.env.NODE_ENV === 'production' ? window.location.origin // Use the deployed website's origin in production\n: 'http://localhost:5000'; // Localhost for development\nconst socket = io(serverURL); // Server URL\n\nconst FileShare = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [targetUser, setTargetUser] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState('');\n  const [dataChannel, setDataChannel] = useState(null);\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\n  const [receivedFileChunks, setReceivedFileChunks] = useState([]);\n  const [fileMetadata, setFileMetadata] = useState(null);\n  const CHUNK_SIZE = 16384;\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server.');\n    });\n    socket.on('connection-request', fromUsername => {\n      const accept = window.confirm(`${fromUsername} wants to connect. Accept?`);\n      if (accept) {\n        socket.emit('accept-connection', fromUsername);\n        setStatus('Connection established!');\n        setIsConnected(true);\n      }\n    });\n    return () => {\n      socket.off('connection-request');\n    };\n  }, []);\n  const handleUsernameSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/validate-user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Assuming server response contains a success message when the user is valid\n        socket.emit('register-user', username);\n        setStatus('User registered successfully.');\n      } else {\n        // Handle validation failure or errors\n        setStatus(result.message || 'Validation failed.');\n      }\n    } catch (error) {\n      console.error('Error during user validation:', error);\n      setStatus('An error occurred. Please try again.');\n    }\n  };\n  const handleConnectionRequest = () => {\n    socket.emit('connection-request', targetUser);\n    setStatus(`Connection request sent to ${targetUser}.`);\n  };\n  const createOffer = async () => {\n    const channel = peerConnection.createDataChannel('fileTransfer');\n    setDataChannel(channel);\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    socket.emit('offer', {\n      offer,\n      targetUser\n    });\n    setStatus('Offer sent!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-share-container\",\n    children: !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"username-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUsernameSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"File Share App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter target username\",\n          value: targetUser,\n          onChange: e => setTargetUser(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConnectionRequest,\n          children: \"Send Connection Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createOffer,\n          children: \"Send File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(FileShare, \"uHEdJlzj2gmkMs0RlIEk2eZE2zY=\");\n_c = FileShare;\nexport default FileShare;\nvar _c;\n$RefreshReg$(_c, \"FileShare\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","serverURL","process","env","NODE_ENV","window","location","origin","socket","FileShare","_s","username","setUsername","targetUser","setTargetUser","isConnected","setIsConnected","file","setFile","status","setStatus","dataChannel","setDataChannel","peerConnection","setPeerConnection","RTCPeerConnection","receivedFileChunks","setReceivedFileChunks","fileMetadata","setFileMetadata","CHUNK_SIZE","on","console","log","fromUsername","accept","confirm","emit","off","handleUsernameSubmit","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","error","handleConnectionRequest","createOffer","channel","createDataChannel","offer","setLocalDescription","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","files","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/FileShare.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport './FileShare.css';\r\n\r\nconst serverURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.origin // Use the deployed website's origin in production\r\n    : 'http://localhost:5000'; // Localhost for development\r\nconst socket = io(serverURL); // Server URL\r\n\r\nconst FileShare = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [targetUser, setTargetUser] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [dataChannel, setDataChannel] = useState(null);\r\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\r\n  const [receivedFileChunks, setReceivedFileChunks] = useState([]);\r\n  const [fileMetadata, setFileMetadata] = useState(null);\r\n  const CHUNK_SIZE = 16384;\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      console.log('Connected to server.');\r\n    });\r\n\r\n    socket.on('connection-request', (fromUsername) => {\r\n      const accept = window.confirm(`${fromUsername} wants to connect. Accept?`);\r\n      if (accept) {\r\n        socket.emit('accept-connection', fromUsername);\r\n        setStatus('Connection established!');\r\n        setIsConnected(true);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('connection-request');\r\n    };\r\n  }, []);\r\n\r\n  const handleUsernameSubmit = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/validate-user', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n  \r\n      const result = await response.json();\r\n  \r\n      if (response.ok) {\r\n        // Assuming server response contains a success message when the user is valid\r\n        socket.emit('register-user', username);\r\n        setStatus('User registered successfully.');\r\n      } else {\r\n        // Handle validation failure or errors\r\n        setStatus(result.message || 'Validation failed.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during user validation:', error);\r\n      setStatus('An error occurred. Please try again.');\r\n    }\r\n  };\r\n  \r\n\r\n  const handleConnectionRequest = () => {\r\n    socket.emit('connection-request', targetUser);\r\n    setStatus(`Connection request sent to ${targetUser}.`);\r\n  };\r\n\r\n  const createOffer = async () => {\r\n    const channel = peerConnection.createDataChannel('fileTransfer');\r\n    setDataChannel(channel);\r\n\r\n    const offer = await peerConnection.createOffer();\r\n    await peerConnection.setLocalDescription(offer);\r\n\r\n    socket.emit('offer', { offer, targetUser });\r\n    setStatus('Offer sent!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-share-container\">\r\n      {!isConnected ? (\r\n        <div className=\"username-modal\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <button onClick={handleUsernameSubmit}>Submit</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <h1>File Share App</h1>\r\n          <div className=\"file-input\">\r\n            <input type=\"text\" placeholder=\"Enter target username\" value={targetUser} onChange={(e) => setTargetUser(e.target.value)} />\r\n            <button onClick={handleConnectionRequest}>Send Connection Request</button>\r\n          </div>\r\n          <div className=\"file-input\">\r\n            <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n            <button onClick={createOffer}>Send File</button>\r\n          </div>\r\n          {status && <p className=\"status-message\">{status}</p>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileShare;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}