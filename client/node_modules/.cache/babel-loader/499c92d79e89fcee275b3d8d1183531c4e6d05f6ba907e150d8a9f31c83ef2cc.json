{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\file-sharing-app\\\\client\\\\src\\\\FileShare\\\\FileShare.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './FileShare.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Server URL\n\nconst FileShare = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\n  const [dataChannel, setDataChannel] = useState(null);\n  const [status, setStatus] = useState('');\n  const [isOfferSent, setIsOfferSent] = useState(false);\n  const [receivedFile, setReceivedFile] = useState(null);\n  const CHUNK_SIZE = 16384;\n  useEffect(() => {\n    const channel = peerConnection.createDataChannel('fileTransfer');\n    channel.onopen = () => {\n      console.log('Data channel opened');\n      setStatus('Data channel is open.');\n    };\n    channel.onclose = () => setStatus('Data channel is closed.');\n    channel.onmessage = event => {\n      try {\n        if (event.data instanceof Blob) {\n          setReceivedFile(event.data); // Store the received file data\n          setStatus('File received. Click \"Receive File\" to download.');\n        }\n      } catch (error) {\n        console.error(\"Error receiving file:\", error);\n        setStatus('Error receiving file.');\n      }\n    };\n    setDataChannel(channel);\n    socket.on('offer', offer => {\n      peerConnection.setRemoteDescription(new RTCSessionDescription(offer)).catch(err => console.error(\"Failed to set remote description:\", err));\n      peerConnection.createAnswer().then(answer => {\n        peerConnection.setLocalDescription(answer);\n        socket.emit('answer', answer);\n      }).catch(err => console.error(\"Failed to create answer:\", err));\n    });\n    socket.on('answer', answer => {\n      peerConnection.setRemoteDescription(new RTCSessionDescription(answer)).catch(err => console.error(\"Failed to set remote description:\", err));\n    });\n    socket.on('ice-candidate', candidate => {\n      peerConnection.addIceCandidate(new RTCIceCandidate(candidate)).catch(err => console.error(\"Failed to add ICE candidate:\", err));\n    });\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit('ice-candidate', event.candidate);\n      }\n    };\n    return () => {\n      socket.off('offer');\n      socket.off('answer');\n      socket.off('ice-candidate');\n    };\n  }, [peerConnection]);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n    setStatus('');\n  };\n  const sendFile = () => {\n    if (!file || !dataChannel) {\n      setStatus('No file selected or data channel not available.');\n      return;\n    }\n    if (dataChannel.readyState !== 'open') {\n      setStatus('Data channel is not open yet.');\n      return;\n    }\n    const fileReader = new FileReader();\n    let offset = 0;\n    fileReader.onload = event => {\n      dataChannel.send(event.target.result);\n      offset += event.target.result.byteLength;\n      if (offset < file.size) {\n        sendNextChunk();\n      } else {\n        setStatus('File sent successfully!');\n        setFile(null);\n      }\n    };\n    const sendNextChunk = () => {\n      const chunk = file.slice(offset, offset + CHUNK_SIZE);\n      fileReader.readAsArrayBuffer(chunk);\n    };\n    sendNextChunk();\n  };\n  const createOffer = () => {\n    if (isOfferSent) return;\n    peerConnection.createOffer().then(offer => {\n      peerConnection.setLocalDescription(offer);\n      socket.emit('offer', offer);\n      setIsOfferSent(true);\n      setStatus('Offer sent!');\n    }).catch(err => {\n      console.error('Error creating offer:', err);\n      setStatus('Error creating offer.');\n    });\n  };\n  const handleReceiveFile = () => {\n    if (!receivedFile) {\n      setStatus('No file available to receive.');\n      return;\n    }\n\n    // Trigger download of the received file\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(receivedFile);\n    link.download = 'received_file';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    setStatus('File received successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-share-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Share App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendFile,\n        children: \"Send File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createOffer,\n        children: \"Create Offer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReceiveFile,\n        children: \"Receive File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(FileShare, \"r0VeXSlS2GsBT8eW3PnKqZef3Kc=\");\n_c = FileShare;\nexport default FileShare;\nvar _c;\n$RefreshReg$(_c, \"FileShare\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","FileShare","_s","file","setFile","peerConnection","setPeerConnection","RTCPeerConnection","dataChannel","setDataChannel","status","setStatus","isOfferSent","setIsOfferSent","receivedFile","setReceivedFile","CHUNK_SIZE","channel","createDataChannel","onopen","console","log","onclose","onmessage","event","data","Blob","error","on","offer","setRemoteDescription","RTCSessionDescription","catch","err","createAnswer","then","answer","setLocalDescription","emit","candidate","addIceCandidate","RTCIceCandidate","onicecandidate","off","handleFileChange","target","files","sendFile","readyState","fileReader","FileReader","offset","onload","send","result","byteLength","size","sendNextChunk","chunk","slice","readAsArrayBuffer","createOffer","handleReceiveFile","link","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["F:/projects/file-sharing-app/client/src/FileShare/FileShare.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport './FileShare.css';\r\n\r\nconst socket = io('http://localhost:5000'); // Server URL\r\n\r\nconst FileShare = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\r\n  const [dataChannel, setDataChannel] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [isOfferSent, setIsOfferSent] = useState(false);\r\n  const [receivedFile, setReceivedFile] = useState(null);\r\n  const CHUNK_SIZE = 16384;\r\n\r\n  useEffect(() => {\r\n    const channel = peerConnection.createDataChannel('fileTransfer');\r\n    \r\n    channel.onopen = () => {\r\n      console.log('Data channel opened');\r\n      setStatus('Data channel is open.');\r\n    };\r\n    channel.onclose = () => setStatus('Data channel is closed.');\r\n\r\n    channel.onmessage = (event) => {\r\n      try {\r\n        if (event.data instanceof Blob) {\r\n          setReceivedFile(event.data);  // Store the received file data\r\n          setStatus('File received. Click \"Receive File\" to download.');\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error receiving file:\", error);\r\n        setStatus('Error receiving file.');\r\n      }\r\n    };\r\n\r\n    setDataChannel(channel);\r\n\r\n    socket.on('offer', (offer) => {\r\n      peerConnection.setRemoteDescription(new RTCSessionDescription(offer))\r\n        .catch(err => console.error(\"Failed to set remote description:\", err));\r\n      peerConnection.createAnswer().then((answer) => {\r\n        peerConnection.setLocalDescription(answer);\r\n        socket.emit('answer', answer);\r\n      }).catch(err => console.error(\"Failed to create answer:\", err));\r\n    });\r\n\r\n    socket.on('answer', (answer) => {\r\n      peerConnection.setRemoteDescription(new RTCSessionDescription(answer))\r\n        .catch(err => console.error(\"Failed to set remote description:\", err));\r\n    });\r\n\r\n    socket.on('ice-candidate', (candidate) => {\r\n      peerConnection.addIceCandidate(new RTCIceCandidate(candidate))\r\n        .catch(err => console.error(\"Failed to add ICE candidate:\", err));\r\n    });\r\n\r\n    peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socket.emit('ice-candidate', event.candidate);\r\n      }\r\n    };\r\n\r\n    return () => {\r\n      socket.off('offer');\r\n      socket.off('answer');\r\n      socket.off('ice-candidate');\r\n    };\r\n  }, [peerConnection]);\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n    setStatus(''); \r\n  };\r\n\r\n  const sendFile = () => {\r\n    if (!file || !dataChannel) {\r\n      setStatus('No file selected or data channel not available.');\r\n      return;\r\n    }\r\n\r\n    if (dataChannel.readyState !== 'open') {\r\n      setStatus('Data channel is not open yet.');\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    let offset = 0;\r\n\r\n    fileReader.onload = (event) => {\r\n      dataChannel.send(event.target.result);\r\n      offset += event.target.result.byteLength;\r\n\r\n      if (offset < file.size) {\r\n        sendNextChunk();\r\n      } else {\r\n        setStatus('File sent successfully!');\r\n        setFile(null); \r\n      }\r\n    };\r\n\r\n    const sendNextChunk = () => {\r\n      const chunk = file.slice(offset, offset + CHUNK_SIZE);\r\n      fileReader.readAsArrayBuffer(chunk);\r\n    };\r\n\r\n    sendNextChunk(); \r\n  };\r\n\r\n  const createOffer = () => {\r\n    if (isOfferSent) return;\r\n\r\n    peerConnection.createOffer()\r\n      .then((offer) => {\r\n        peerConnection.setLocalDescription(offer);\r\n        socket.emit('offer', offer);\r\n        setIsOfferSent(true);\r\n        setStatus('Offer sent!');\r\n      })\r\n      .catch(err => {\r\n        console.error('Error creating offer:', err);\r\n        setStatus('Error creating offer.');\r\n      });\r\n  };\r\n\r\n  const handleReceiveFile = () => {\r\n    if (!receivedFile) {\r\n      setStatus('No file available to receive.');\r\n      return;\r\n    }\r\n\r\n    // Trigger download of the received file\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(receivedFile);\r\n    link.download = 'received_file';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    setStatus('File received successfully!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-share-container\">\r\n      <h1>File Share App</h1>\r\n      <div className=\"file-input\">\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={sendFile}>Send File</button>\r\n        <button onClick={createOffer}>Create Offer</button>\r\n        <button onClick={handleReceiveFile}>Receive File</button>\r\n      </div>\r\n      {status && <p className=\"status-message\">{status}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileShare;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,MAAMI,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAIY,iBAAiB,CAAC,CAAC,CAAC;EAC7E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMqB,UAAU,GAAG,KAAK;EAExBpB,SAAS,CAAC,MAAM;IACd,MAAMqB,OAAO,GAAGZ,cAAc,CAACa,iBAAiB,CAAC,cAAc,CAAC;IAEhED,OAAO,CAACE,MAAM,GAAG,MAAM;MACrBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCV,SAAS,CAAC,uBAAuB,CAAC;IACpC,CAAC;IACDM,OAAO,CAACK,OAAO,GAAG,MAAMX,SAAS,CAAC,yBAAyB,CAAC;IAE5DM,OAAO,CAACM,SAAS,GAAIC,KAAK,IAAK;MAC7B,IAAI;QACF,IAAIA,KAAK,CAACC,IAAI,YAAYC,IAAI,EAAE;UAC9BX,eAAe,CAACS,KAAK,CAACC,IAAI,CAAC,CAAC,CAAE;UAC9Bd,SAAS,CAAC,kDAAkD,CAAC;QAC/D;MACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7ChB,SAAS,CAAC,uBAAuB,CAAC;MACpC;IACF,CAAC;IAEDF,cAAc,CAACQ,OAAO,CAAC;IAEvBjB,MAAM,CAAC4B,EAAE,CAAC,OAAO,EAAGC,KAAK,IAAK;MAC5BxB,cAAc,CAACyB,oBAAoB,CAAC,IAAIC,qBAAqB,CAACF,KAAK,CAAC,CAAC,CAClEG,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACO,KAAK,CAAC,mCAAmC,EAAEM,GAAG,CAAC,CAAC;MACxE5B,cAAc,CAAC6B,YAAY,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;QAC7C/B,cAAc,CAACgC,mBAAmB,CAACD,MAAM,CAAC;QAC1CpC,MAAM,CAACsC,IAAI,CAAC,QAAQ,EAAEF,MAAM,CAAC;MAC/B,CAAC,CAAC,CAACJ,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACO,KAAK,CAAC,0BAA0B,EAAEM,GAAG,CAAC,CAAC;IACjE,CAAC,CAAC;IAEFjC,MAAM,CAAC4B,EAAE,CAAC,QAAQ,EAAGQ,MAAM,IAAK;MAC9B/B,cAAc,CAACyB,oBAAoB,CAAC,IAAIC,qBAAqB,CAACK,MAAM,CAAC,CAAC,CACnEJ,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACO,KAAK,CAAC,mCAAmC,EAAEM,GAAG,CAAC,CAAC;IAC1E,CAAC,CAAC;IAEFjC,MAAM,CAAC4B,EAAE,CAAC,eAAe,EAAGW,SAAS,IAAK;MACxClC,cAAc,CAACmC,eAAe,CAAC,IAAIC,eAAe,CAACF,SAAS,CAAC,CAAC,CAC3DP,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACO,KAAK,CAAC,8BAA8B,EAAEM,GAAG,CAAC,CAAC;IACrE,CAAC,CAAC;IAEF5B,cAAc,CAACqC,cAAc,GAAIlB,KAAK,IAAK;MACzC,IAAIA,KAAK,CAACe,SAAS,EAAE;QACnBvC,MAAM,CAACsC,IAAI,CAAC,eAAe,EAAEd,KAAK,CAACe,SAAS,CAAC;MAC/C;IACF,CAAC;IAED,OAAO,MAAM;MACXvC,MAAM,CAAC2C,GAAG,CAAC,OAAO,CAAC;MACnB3C,MAAM,CAAC2C,GAAG,CAAC,QAAQ,CAAC;MACpB3C,MAAM,CAAC2C,GAAG,CAAC,eAAe,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,CAACtC,cAAc,CAAC,CAAC;EAEpB,MAAMuC,gBAAgB,GAAIpB,KAAK,IAAK;IAClCpB,OAAO,CAACoB,KAAK,CAACqB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9BnC,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,MAAMoC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI,CAAC5C,IAAI,IAAI,CAACK,WAAW,EAAE;MACzBG,SAAS,CAAC,iDAAiD,CAAC;MAC5D;IACF;IAEA,IAAIH,WAAW,CAACwC,UAAU,KAAK,MAAM,EAAE;MACrCrC,SAAS,CAAC,+BAA+B,CAAC;MAC1C;IACF;IAEA,MAAMsC,UAAU,GAAG,IAAIC,UAAU,CAAC,CAAC;IACnC,IAAIC,MAAM,GAAG,CAAC;IAEdF,UAAU,CAACG,MAAM,GAAI5B,KAAK,IAAK;MAC7BhB,WAAW,CAAC6C,IAAI,CAAC7B,KAAK,CAACqB,MAAM,CAACS,MAAM,CAAC;MACrCH,MAAM,IAAI3B,KAAK,CAACqB,MAAM,CAACS,MAAM,CAACC,UAAU;MAExC,IAAIJ,MAAM,GAAGhD,IAAI,CAACqD,IAAI,EAAE;QACtBC,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QACL9C,SAAS,CAAC,yBAAyB,CAAC;QACpCP,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC;IAED,MAAMqD,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAMC,KAAK,GAAGvD,IAAI,CAACwD,KAAK,CAACR,MAAM,EAAEA,MAAM,GAAGnC,UAAU,CAAC;MACrDiC,UAAU,CAACW,iBAAiB,CAACF,KAAK,CAAC;IACrC,CAAC;IAEDD,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIjD,WAAW,EAAE;IAEjBP,cAAc,CAACwD,WAAW,CAAC,CAAC,CACzB1B,IAAI,CAAEN,KAAK,IAAK;MACfxB,cAAc,CAACgC,mBAAmB,CAACR,KAAK,CAAC;MACzC7B,MAAM,CAACsC,IAAI,CAAC,OAAO,EAAET,KAAK,CAAC;MAC3BhB,cAAc,CAAC,IAAI,CAAC;MACpBF,SAAS,CAAC,aAAa,CAAC;IAC1B,CAAC,CAAC,CACDqB,KAAK,CAACC,GAAG,IAAI;MACZb,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEM,GAAG,CAAC;MAC3CtB,SAAS,CAAC,uBAAuB,CAAC;IACpC,CAAC,CAAC;EACN,CAAC;EAED,MAAMmD,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAAChD,YAAY,EAAE;MACjBH,SAAS,CAAC,+BAA+B,CAAC;MAC1C;IACF;;IAEA;IACA,MAAMoD,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACtD,YAAY,CAAC;IAC7CiD,IAAI,CAACM,QAAQ,GAAG,eAAe;IAC/BL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;IAC/BA,IAAI,CAACS,KAAK,CAAC,CAAC;IACZR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;IAC/BpD,SAAS,CAAC,6BAA6B,CAAC;EAC1C,CAAC;EAED,oBACEZ,OAAA;IAAK2E,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC5E,OAAA;MAAA4E,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhF,OAAA;MAAK2E,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB5E,OAAA;QAAOiF,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAErC;MAAiB;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDhF,OAAA;QAAQmF,OAAO,EAAEnC,QAAS;QAAA4B,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7ChF,OAAA;QAAQmF,OAAO,EAAErB,WAAY;QAAAc,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnDhF,OAAA;QAAQmF,OAAO,EAAEpB,iBAAkB;QAAAa,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,EACLrE,MAAM,iBAAIX,OAAA;MAAG2E,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAEjE;IAAM;MAAAkE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAAC7E,EAAA,CAnJID,SAAS;AAAAkF,EAAA,GAATlF,SAAS;AAqJf,eAAeA,SAAS;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}