{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\FileShare.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SenderApp = () => {\n  _s();\n  const [joinID, setJoinID] = useState(\"\");\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\n  const [fileTransfers, setFileTransfers] = useState([]); // Array to track multiple files\n\n  const socket = useRef(null);\n  const joinIDRef = useRef(\"\");\n  const fileBufferRef = useRef(null);\n  const currentFileIndexRef = useRef(-1); // Track the index of the current file being sent\n\n  useEffect(() => {\n    socket.current = io(\"http://localhost:5000\");\n    socket.current.on(\"init\", uid => {\n      console.log(`Receiver connected with ID: ${uid}`);\n      setActiveScreen(\"fs-screen\");\n    });\n    socket.current.on(\"fs-share\", () => {\n      console.log(\"Receiver requested file chunk. Sending next chunk...\");\n      sendNextChunk();\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, []);\n  const generateID = () => {\n    return `${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}`;\n  };\n  const handleCreateRoom = () => {\n    const newJoinID = generateID();\n    setJoinID(newJoinID);\n    joinIDRef.current = newJoinID;\n    socket.current.emit(\"sender-join\", {\n      uid: newJoinID\n    });\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) {\n      console.error(\"No file selected.\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = () => {\n      const buffer = new Uint8Array(reader.result);\n\n      // Add the new file to the list of fileTransfers\n      setFileTransfers(prevTransfers => [...prevTransfers, {\n        file,\n        progress: 0,\n        buffer\n      }]);\n\n      // Set the buffer for sending chunks and update the index\n      fileBufferRef.current = buffer;\n      currentFileIndexRef.current = fileTransfers.length;\n      socket.current.emit(\"file-meta\", {\n        uid: joinIDRef.current,\n        metadata: {\n          filename: file.name,\n          total_buffer_size: buffer.length,\n          buffer_size: 1024\n        }\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const sendNextChunk = () => {\n    const chunkSize = 1024;\n    const fileBuffer = fileBufferRef.current;\n    if (!fileBuffer || fileBuffer.byteLength === 0) {\n      console.warn(\"No more chunks to send.\");\n\n      // Mark the current file as 100% completed\n      setFileTransfers(prevTransfers => prevTransfers.map((transfer, index) => index === currentFileIndexRef.current ? {\n        ...transfer,\n        progress: 100\n      } : transfer));\n      fileBufferRef.current = null;\n      currentFileIndexRef.current = -1; // Reset for the next file\n      return;\n    }\n    const chunk = fileBuffer.slice(0, chunkSize);\n    fileBufferRef.current = fileBuffer.slice(chunkSize);\n    socket.current.emit(\"file-raw\", {\n      uid: joinIDRef.current,\n      buffer: chunk\n    });\n    const remainingSize = fileBufferRef.current.byteLength;\n    const totalSize = fileTransfers[currentFileIndexRef.current].file.size;\n    const progress = Math.trunc((totalSize - remainingSize) / totalSize * 100);\n\n    // Update progress for the current file\n    setFileTransfers(prevTransfers => prevTransfers.map((transfer, index) => index === currentFileIndexRef.current ? {\n      ...transfer,\n      progress\n    } : transfer));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [activeScreen === \"join-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen join-screen active\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateRoom,\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), joinID && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Room ID: \", joinID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), activeScreen === \"fs-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen fs-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Share Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), fileTransfers.map((transfer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-transfer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File: \", transfer.file.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", transfer.progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(SenderApp, \"JgbanH5ahdyu9HuJIFZgofDl8t4=\");\n_c = SenderApp;\nexport default SenderApp;\nvar _c;\n$RefreshReg$(_c, \"SenderApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","SenderApp","_s","joinID","setJoinID","activeScreen","setActiveScreen","fileTransfers","setFileTransfers","socket","joinIDRef","fileBufferRef","currentFileIndexRef","current","on","uid","console","log","sendNextChunk","disconnect","generateID","Math","trunc","random","handleCreateRoom","newJoinID","emit","handleFileChange","e","file","target","files","error","reader","FileReader","onload","buffer","Uint8Array","result","prevTransfers","progress","length","metadata","filename","name","total_buffer_size","buffer_size","readAsArrayBuffer","chunkSize","fileBuffer","byteLength","warn","map","transfer","index","chunk","slice","remainingSize","totalSize","size","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/FileShare.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst SenderApp = () => {\r\n  const [joinID, setJoinID] = useState(\"\");\r\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\r\n  const [fileTransfers, setFileTransfers] = useState([]); // Array to track multiple files\r\n\r\n  const socket = useRef(null);\r\n  const joinIDRef = useRef(\"\");\r\n  const fileBufferRef = useRef(null);\r\n  const currentFileIndexRef = useRef(-1); // Track the index of the current file being sent\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"http://localhost:5000\");\r\n\r\n    socket.current.on(\"init\", (uid) => {\r\n      console.log(`Receiver connected with ID: ${uid}`);\r\n      setActiveScreen(\"fs-screen\");\r\n    });\r\n\r\n    socket.current.on(\"fs-share\", () => {\r\n      console.log(\"Receiver requested file chunk. Sending next chunk...\");\r\n      sendNextChunk();\r\n    });\r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const generateID = () => {\r\n    return `${Math.trunc(Math.random() * 999)}-${Math.trunc(\r\n      Math.random() * 999\r\n    )}-${Math.trunc(Math.random() * 999)}`;\r\n  };\r\n\r\n  const handleCreateRoom = () => {\r\n    const newJoinID = generateID();\r\n    setJoinID(newJoinID);\r\n    joinIDRef.current = newJoinID;\r\n    socket.current.emit(\"sender-join\", { uid: newJoinID });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) {\r\n      console.error(\"No file selected.\");\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const buffer = new Uint8Array(reader.result);\r\n\r\n      // Add the new file to the list of fileTransfers\r\n      setFileTransfers((prevTransfers) => [\r\n        ...prevTransfers,\r\n        { file, progress: 0, buffer },\r\n      ]);\r\n\r\n      // Set the buffer for sending chunks and update the index\r\n      fileBufferRef.current = buffer;\r\n      currentFileIndexRef.current = fileTransfers.length;\r\n\r\n      socket.current.emit(\"file-meta\", {\r\n        uid: joinIDRef.current,\r\n        metadata: {\r\n          filename: file.name,\r\n          total_buffer_size: buffer.length,\r\n          buffer_size: 1024,\r\n        },\r\n      });\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const sendNextChunk = () => {\r\n    const chunkSize = 1024;\r\n    const fileBuffer = fileBufferRef.current;\r\n\r\n    if (!fileBuffer || fileBuffer.byteLength === 0) {\r\n      console.warn(\"No more chunks to send.\");\r\n\r\n      // Mark the current file as 100% completed\r\n      setFileTransfers((prevTransfers) =>\r\n        prevTransfers.map((transfer, index) =>\r\n          index === currentFileIndexRef.current\r\n            ? { ...transfer, progress: 100 }\r\n            : transfer\r\n        )\r\n      );\r\n\r\n      fileBufferRef.current = null;\r\n      currentFileIndexRef.current = -1; // Reset for the next file\r\n      return;\r\n    }\r\n\r\n    const chunk = fileBuffer.slice(0, chunkSize);\r\n    fileBufferRef.current = fileBuffer.slice(chunkSize);\r\n\r\n    socket.current.emit(\"file-raw\", {\r\n      uid: joinIDRef.current,\r\n      buffer: chunk,\r\n    });\r\n\r\n    const remainingSize = fileBufferRef.current.byteLength;\r\n    const totalSize = fileTransfers[currentFileIndexRef.current].file.size;\r\n\r\n    const progress = Math.trunc(\r\n      ((totalSize - remainingSize) / totalSize) * 100\r\n    );\r\n\r\n    // Update progress for the current file\r\n    setFileTransfers((prevTransfers) =>\r\n      prevTransfers.map((transfer, index) =>\r\n        index === currentFileIndexRef.current\r\n          ? { ...transfer, progress }\r\n          : transfer\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {activeScreen === \"join-screen\" && (\r\n        <div className=\"screen join-screen active\">\r\n          <h2>Create a Room</h2>\r\n          <button onClick={handleCreateRoom}>Create Room</button>\r\n          {joinID && <p>Room ID: {joinID}</p>}\r\n        </div>\r\n      )}\r\n\r\n      {activeScreen === \"fs-screen\" && (\r\n        <div className=\"screen fs-screen\">\r\n          <h2>Share Files</h2>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n\r\n          {fileTransfers.map((transfer, index) => (\r\n            <div key={index} className=\"file-transfer\">\r\n              <p>File: {transfer.file.name}</p>\r\n              <p>Progress: {transfer.progress}%</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SenderApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}