{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\FileShare.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SenderApp = () => {\n  _s();\n  const [receiverID, setReceiverID] = useState(null);\n  const [joinID, setJoinID] = useState(\"\");\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\n  const [fileTransfer, setFileTransfer] = useState({\n    file: null,\n    buffer: null,\n    progress: 0\n  });\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = io(\"http://localhost:5000\");\n    socket.current.on(\"init\", uid => {\n      setReceiverID(uid);\n      setActiveScreen(\"fs-screen\");\n    });\n    socket.current.on(\"fs-share\", () => {\n      console.log(\"fs-share received; sending next chunk\");\n      sendNextChunk();\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, []);\n  const generateID = () => {\n    return `${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}`;\n  };\n  const handleCreateRoom = () => {\n    const newJoinID = generateID();\n    setJoinID(newJoinID);\n    console.log(`Room created with ID: ${newJoinID}`);\n    socket.current.emit(\"sender-join\", {\n      uid: newJoinID\n    });\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      const buffer = new Uint8Array(reader.result);\n      setFileTransfer({\n        file,\n        buffer,\n        progress: 0\n      });\n      console.log(`Sending file metadata for Room ID: ${joinID}`); // Use joinID here\n      socket.current.emit(\"file-meta\", {\n        uid: joinID,\n        // Correctly send the sender's room ID\n        metadata: {\n          filename: file.name,\n          total_buffer_size: buffer.length,\n          buffer_size: 1024\n        }\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const sendNextChunk = () => {\n    setFileTransfer(prev => {\n      if (!prev.buffer || prev.buffer.length === 0) {\n        console.log(\"All chunks sent!\");\n        return prev;\n      }\n      const chunk = prev.buffer.slice(0, 1024);\n      if (!chunk || !receiverID) {\n        console.error(\"Invalid chunk or receiver ID\");\n        return prev;\n      }\n      console.log(`Sending chunk of size ${chunk.byteLength}`);\n      socket.current.emit(\"file-raw\", {\n        uid: receiverID,\n        buffer: chunk\n      });\n      return {\n        ...prev,\n        buffer: prev.buffer.slice(1024),\n        progress: Math.trunc((prev.file.size - prev.buffer.length + chunk.byteLength) / prev.file.size * 100)\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [activeScreen === \"join-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen join-screen active\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateRoom,\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), joinID && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Room ID: \", joinID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), activeScreen === \"fs-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen fs-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Share a File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), fileTransfer.file && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: fileTransfer.file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", fileTransfer.progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(SenderApp, \"d20RnlPLNlSnjyvObvZ/dYPKWic=\");\n_c = SenderApp;\nexport default SenderApp;\nvar _c;\n$RefreshReg$(_c, \"SenderApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","SenderApp","_s","receiverID","setReceiverID","joinID","setJoinID","activeScreen","setActiveScreen","fileTransfer","setFileTransfer","file","buffer","progress","socket","current","on","uid","console","log","sendNextChunk","disconnect","generateID","Math","trunc","random","handleCreateRoom","newJoinID","emit","handleFileChange","e","target","files","reader","FileReader","onload","Uint8Array","result","metadata","filename","name","total_buffer_size","length","buffer_size","readAsArrayBuffer","prev","chunk","slice","error","byteLength","size","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/FileShare.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst SenderApp = () => {\r\n  const [receiverID, setReceiverID] = useState(null);\r\n  const [joinID, setJoinID] = useState(\"\");\r\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\r\n  const [fileTransfer, setFileTransfer] = useState({\r\n    file: null,\r\n    buffer: null,\r\n    progress: 0,\r\n  });\r\n\r\n  const socket = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"http://localhost:5000\");\r\n\r\n    socket.current.on(\"init\", (uid) => {\r\n      setReceiverID(uid);\r\n      setActiveScreen(\"fs-screen\");\r\n    });\r\n\r\n    socket.current.on(\"fs-share\", () => {\r\n      console.log(\"fs-share received; sending next chunk\");\r\n      sendNextChunk();\r\n    });\r\n    \r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const generateID = () => {\r\n    return `${Math.trunc(Math.random() * 999)}-${Math.trunc(\r\n      Math.random() * 999\r\n    )}-${Math.trunc(Math.random() * 999)}`;\r\n  };\r\n\r\n  const handleCreateRoom = () => {\r\n    const newJoinID = generateID();\r\n    setJoinID(newJoinID);\r\n    console.log(`Room created with ID: ${newJoinID}`);\r\n    socket.current.emit(\"sender-join\", { uid: newJoinID });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n  \r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const buffer = new Uint8Array(reader.result);\r\n      setFileTransfer({\r\n        file,\r\n        buffer,\r\n        progress: 0,\r\n      });\r\n  \r\n      console.log(`Sending file metadata for Room ID: ${joinID}`); // Use joinID here\r\n      socket.current.emit(\"file-meta\", {\r\n        uid: joinID, // Correctly send the sender's room ID\r\n        metadata: {\r\n          filename: file.name,\r\n          total_buffer_size: buffer.length,\r\n          buffer_size: 1024,\r\n        },\r\n      });\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const sendNextChunk = () => {\r\n    setFileTransfer((prev) => {\r\n      if (!prev.buffer || prev.buffer.length === 0) {\r\n        console.log(\"All chunks sent!\");\r\n        return prev;\r\n      }\r\n  \r\n      const chunk = prev.buffer.slice(0, 1024);\r\n      if (!chunk || !receiverID) {\r\n        console.error(\"Invalid chunk or receiver ID\");\r\n        return prev;\r\n      }\r\n  \r\n      console.log(`Sending chunk of size ${chunk.byteLength}`);\r\n      socket.current.emit(\"file-raw\", { uid: receiverID, buffer: chunk });\r\n  \r\n      return {\r\n        ...prev,\r\n        buffer: prev.buffer.slice(1024),\r\n        progress: Math.trunc(\r\n          ((prev.file.size - prev.buffer.length + chunk.byteLength) /\r\n            prev.file.size) *\r\n            100\r\n        ),\r\n      };\r\n    });\r\n  };    \r\n  \r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {activeScreen === \"join-screen\" && (\r\n        <div className=\"screen join-screen active\">\r\n          <h2>Create a Room</h2>\r\n          <button onClick={handleCreateRoom}>Create Room</button>\r\n          {joinID && <p>Room ID: {joinID}</p>}\r\n        </div>\r\n      )}\r\n\r\n      {activeScreen === \"fs-screen\" && (\r\n        <div className=\"screen fs-screen\">\r\n          <h2>Share a File</h2>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          {fileTransfer.file && (\r\n            <div>\r\n              <p>{fileTransfer.file.name}</p>\r\n              <p>Progress: {fileTransfer.progress}%</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SenderApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}