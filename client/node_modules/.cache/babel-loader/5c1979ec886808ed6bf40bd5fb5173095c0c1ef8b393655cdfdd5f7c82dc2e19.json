{"ast":null,"code":"var _jsxFileName = \"F:\\\\3rd sem\\\\wt proj\\\\File_Sharing_App\\\\client\\\\src\\\\FileShare\\\\UserPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { socket } from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPrompt = () => {\n  _s();\n  const [friendUsername, setFriendUsername] = useState('');\n  const [status, setStatus] = useState('');\n  const [friendRequests, setFriendRequests] = useState([]); // Store incoming friend requests\n\n  useEffect(() => {\n    // Check socket connection status when this component mounts\n    console.log('Socket connected status:', socket.connected);\n\n    // Log when the user is connected or disconnected\n    socket.on('connect', () => {\n      console.log('Socket connected:', socket.id);\n    });\n    socket.on('disconnect', () => {\n      console.log('Socket disconnected');\n    });\n\n    // Listen for incoming friend requests\n    socket.on('receive-friend-request', ({\n      from\n    }) => {\n      setFriendRequests(prev => [...prev, from]);\n      console.log(`Friend request received from: ${from}`);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('receive-friend-request');\n    };\n  }, []);\n\n  // Handle friend username change\n  const handleUsernameChange = e => {\n    setFriendUsername(e.target.value);\n  };\n\n  // Handle connect button click\n  const handleConnect = () => {\n    if (!friendUsername) {\n      setStatus('Please enter a valid username.');\n      return;\n    }\n    setStatus('Request sent, waiting for response...');\n    socket.emit('connect-request', {\n      username: friendUsername\n    });\n\n    // Listen for the response from the server\n    socket.on('user-status', response => {\n      if (response === 'offline') {\n        setStatus('User is not online.');\n      } else if (response === 'request-accepted') {\n        setStatus('Request accepted. Data channel established.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-prompt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Friend's Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: friendUsername,\n      onChange: handleUsernameChange,\n      placeholder: \"Friend's Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnect,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Friend Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: friendRequests.map((request, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [request, \" sent you a friend request\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPrompt, \"LNwW/xpx+DKO9MY2J7mI2ypUz9g=\");\n_c = UserPrompt;\nexport default UserPrompt;\nvar _c;\n$RefreshReg$(_c, \"UserPrompt\");","map":{"version":3,"names":["React","useState","useEffect","socket","jsxDEV","_jsxDEV","UserPrompt","_s","friendUsername","setFriendUsername","status","setStatus","friendRequests","setFriendRequests","console","log","connected","on","id","from","prev","off","handleUsernameChange","e","target","value","handleConnect","emit","username","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","request","index","_c","$RefreshReg$"],"sources":["F:/3rd sem/wt proj/File_Sharing_App/client/src/FileShare/UserPrompt.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { socket } from '../socket';\r\n\r\nconst UserPrompt = () => {\r\n  const [friendUsername, setFriendUsername] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [friendRequests, setFriendRequests] = useState([]); // Store incoming friend requests\r\n\r\n  useEffect(() => {\r\n    // Check socket connection status when this component mounts\r\n    console.log('Socket connected status:', socket.connected);\r\n\r\n    // Log when the user is connected or disconnected\r\n    socket.on('connect', () => {\r\n      console.log('Socket connected:', socket.id);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Socket disconnected');\r\n    });\r\n\r\n    // Listen for incoming friend requests\r\n    socket.on('receive-friend-request', ({ from }) => {\r\n      setFriendRequests((prev) => [...prev, from]);\r\n      console.log(`Friend request received from: ${from}`);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('disconnect');\r\n      socket.off('receive-friend-request');\r\n    };\r\n  }, []);\r\n\r\n  // Handle friend username change\r\n  const handleUsernameChange = (e) => {\r\n    setFriendUsername(e.target.value);\r\n  };\r\n\r\n  // Handle connect button click\r\n  const handleConnect = () => {\r\n    if (!friendUsername) {\r\n      setStatus('Please enter a valid username.');\r\n      return;\r\n    }\r\n\r\n    setStatus('Request sent, waiting for response...');\r\n    socket.emit('connect-request', { username: friendUsername });\r\n\r\n    // Listen for the response from the server\r\n    socket.on('user-status', (response) => {\r\n      if (response === 'offline') {\r\n        setStatus('User is not online.');\r\n      } else if (response === 'request-accepted') {\r\n        setStatus('Request accepted. Data channel established.');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-prompt-container\">\r\n      <h2>Enter Friend's Username</h2>\r\n      <input \r\n        type=\"text\" \r\n        value={friendUsername} \r\n        onChange={handleUsernameChange} \r\n        placeholder=\"Friend's Username\" \r\n      />\r\n      <button onClick={handleConnect}>Connect</button>\r\n      <p>{status}</p> {/* Display the status message */}\r\n\r\n      <div>\r\n        <h3>Friend Requests</h3>\r\n        <ul>\r\n          {friendRequests.map((request, index) => (\r\n            <li key={index}>{request} sent you a friend request</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPrompt;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}