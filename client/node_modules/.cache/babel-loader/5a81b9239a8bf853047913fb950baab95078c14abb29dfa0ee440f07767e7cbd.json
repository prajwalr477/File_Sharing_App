{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\File-Share2\\\\client\\\\src\\\\FileShare\\\\FileShare.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SenderApp = () => {\n  _s();\n  const [joinID, setJoinID] = useState(\"\");\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\n  const [fileTransfer, setFileTransfer] = useState({\n    file: null,\n    progress: 0\n  });\n  const socket = useRef(null);\n  const joinIDRef = useRef(\"\");\n  const fileBufferRef = useRef(null);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    socket.current = io(\"http://localhost:5000\");\n    socket.current.on(\"init\", uid => {\n      console.log(`Receiver connected with ID: ${uid}`);\n      setActiveScreen(\"fs-screen\");\n    });\n    socket.current.on(\"fs-share\", () => {\n      console.log(\"Receiver requested file chunk. Sending next chunk...\");\n      sendNextChunk();\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, []);\n  const generateID = () => {\n    return `${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}-${Math.trunc(Math.random() * 999)}`;\n  };\n  const handleCreateRoom = () => {\n    const newJoinID = generateID();\n    setJoinID(newJoinID);\n    joinIDRef.current = newJoinID;\n    socket.current.emit(\"sender-join\", {\n      uid: newJoinID\n    });\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      const buffer = new Uint8Array(reader.result);\n      fileBufferRef.current = buffer;\n      setFileTransfer({\n        file,\n        progress: 0\n      });\n      socket.current.emit(\"file-meta\", {\n        uid: joinIDRef.current,\n        metadata: {\n          filename: file.name,\n          total_buffer_size: buffer.length,\n          buffer_size: 1024\n        }\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const sendNextChunk = () => {\n    const chunkSize = 1024;\n    const fileBuffer = fileBufferRef.current;\n    if (!fileBuffer || fileBuffer.byteLength === 0) {\n      console.warn(\"No more chunks to send.\");\n      return;\n    }\n    const chunk = fileBuffer.slice(0, chunkSize);\n    fileBufferRef.current = fileBuffer.slice(chunkSize);\n    socket.current.emit(\"file-raw\", {\n      uid: joinIDRef.current,\n      buffer: chunk\n    });\n    const remainingSize = fileBufferRef.current.byteLength;\n    setProgress(Math.trunc((fileTransfer.file.size - remainingSize) / fileTransfer.file.size * 100));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [activeScreen === \"join-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen join-screen active\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateRoom,\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), joinID && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Room ID: \", joinID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), activeScreen === \"fs-screen\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen fs-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Share a File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), fileTransfer.file && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: fileTransfer.file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(SenderApp, \"Or83eIj4RYR/ikkLA9S0r6rVXxA=\");\n_c = SenderApp;\nexport default SenderApp;\nvar _c;\n$RefreshReg$(_c, \"SenderApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","SenderApp","_s","joinID","setJoinID","activeScreen","setActiveScreen","fileTransfer","setFileTransfer","file","progress","socket","joinIDRef","fileBufferRef","setProgress","current","on","uid","console","log","sendNextChunk","disconnect","generateID","Math","trunc","random","handleCreateRoom","newJoinID","emit","handleFileChange","e","target","files","reader","FileReader","onload","buffer","Uint8Array","result","metadata","filename","name","total_buffer_size","length","buffer_size","readAsArrayBuffer","chunkSize","fileBuffer","byteLength","warn","chunk","slice","remainingSize","size","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["F:/projects/File-Share2/client/src/FileShare/FileShare.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst SenderApp = () => {\r\n  const [joinID, setJoinID] = useState(\"\");\r\n  const [activeScreen, setActiveScreen] = useState(\"join-screen\");\r\n  const [fileTransfer, setFileTransfer] = useState({\r\n    file: null,\r\n    progress: 0,\r\n  });\r\n\r\n  const socket = useRef(null);\r\n  const joinIDRef = useRef(\"\");\r\n  const fileBufferRef = useRef(null);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"http://localhost:5000\");\r\n\r\n    socket.current.on(\"init\", (uid) => {\r\n      console.log(`Receiver connected with ID: ${uid}`);\r\n      setActiveScreen(\"fs-screen\");\r\n    });\r\n\r\n    socket.current.on(\"fs-share\", () => {\r\n      console.log(\"Receiver requested file chunk. Sending next chunk...\");\r\n      sendNextChunk();\r\n    });\r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const generateID = () => {\r\n    return `${Math.trunc(Math.random() * 999)}-${Math.trunc(\r\n      Math.random() * 999\r\n    )}-${Math.trunc(Math.random() * 999)}`;\r\n  };\r\n\r\n  const handleCreateRoom = () => {\r\n    const newJoinID = generateID();\r\n    setJoinID(newJoinID);\r\n    joinIDRef.current = newJoinID;\r\n    socket.current.emit(\"sender-join\", { uid: newJoinID });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const buffer = new Uint8Array(reader.result);\r\n      fileBufferRef.current = buffer;\r\n      setFileTransfer({ file, progress: 0 });\r\n\r\n      socket.current.emit(\"file-meta\", {\r\n        uid: joinIDRef.current,\r\n        metadata: {\r\n          filename: file.name,\r\n          total_buffer_size: buffer.length,\r\n          buffer_size: 1024,\r\n        },\r\n      });\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const sendNextChunk = () => {\r\n    const chunkSize = 1024;\r\n    const fileBuffer = fileBufferRef.current;\r\n\r\n    if (!fileBuffer || fileBuffer.byteLength === 0) {\r\n      console.warn(\"No more chunks to send.\");\r\n      return;\r\n    }\r\n\r\n    const chunk = fileBuffer.slice(0, chunkSize);\r\n    fileBufferRef.current = fileBuffer.slice(chunkSize);\r\n\r\n    socket.current.emit(\"file-raw\", {\r\n      uid: joinIDRef.current,\r\n      buffer: chunk,\r\n    });\r\n\r\n    const remainingSize = fileBufferRef.current.byteLength;\r\n    setProgress(\r\n      Math.trunc(\r\n        ((fileTransfer.file.size - remainingSize) / fileTransfer.file.size) *\r\n          100\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {activeScreen === \"join-screen\" && (\r\n        <div className=\"screen join-screen active\">\r\n          <h2>Create a Room</h2>\r\n          <button onClick={handleCreateRoom}>Create Room</button>\r\n          {joinID && <p>Room ID: {joinID}</p>}\r\n        </div>\r\n      )}\r\n\r\n      {activeScreen === \"fs-screen\" && (\r\n        <div className=\"screen fs-screen\">\r\n          <h2>Share a File</h2>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          {fileTransfer.file && (\r\n            <div>\r\n              <p>{fileTransfer.file.name}</p>\r\n              <p>Progress: {progress}%</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SenderApp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,aAAa,CAAC;EAC/D,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC;IAC/Cc,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMgB,SAAS,GAAGhB,MAAM,CAAC,EAAE,CAAC;EAC5B,MAAMiB,aAAa,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM,CAACc,QAAQ,EAAEI,WAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAE3CE,SAAS,CAAC,MAAM;IACdc,MAAM,CAACI,OAAO,GAAGjB,EAAE,CAAC,uBAAuB,CAAC;IAE5Ca,MAAM,CAACI,OAAO,CAACC,EAAE,CAAC,MAAM,EAAGC,GAAG,IAAK;MACjCC,OAAO,CAACC,GAAG,CAAC,+BAA+BF,GAAG,EAAE,CAAC;MACjDX,eAAe,CAAC,WAAW,CAAC;IAC9B,CAAC,CAAC;IAEFK,MAAM,CAACI,OAAO,CAACC,EAAE,CAAC,UAAU,EAAE,MAAM;MAClCE,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;MACnEC,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,OAAO,MAAM;MACXT,MAAM,CAACI,OAAO,CAACM,UAAU,CAAC,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,IAAIF,IAAI,CAACC,KAAK,CACrDD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAClB,CAAC,IAAIF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,SAAS,GAAGL,UAAU,CAAC,CAAC;IAC9BlB,SAAS,CAACuB,SAAS,CAAC;IACpBf,SAAS,CAACG,OAAO,GAAGY,SAAS;IAC7BhB,MAAM,CAACI,OAAO,CAACa,IAAI,CAAC,aAAa,EAAE;MAAEX,GAAG,EAAEU;IAAU,CAAC,CAAC;EACxD,CAAC;EAED,MAAME,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMrB,IAAI,GAAGqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACvB,IAAI,EAAE;IAEX,MAAMwB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpB,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAACJ,MAAM,CAACK,MAAM,CAAC;MAC5CzB,aAAa,CAACE,OAAO,GAAGqB,MAAM;MAC9B5B,eAAe,CAAC;QAAEC,IAAI;QAAEC,QAAQ,EAAE;MAAE,CAAC,CAAC;MAEtCC,MAAM,CAACI,OAAO,CAACa,IAAI,CAAC,WAAW,EAAE;QAC/BX,GAAG,EAAEL,SAAS,CAACG,OAAO;QACtBwB,QAAQ,EAAE;UACRC,QAAQ,EAAE/B,IAAI,CAACgC,IAAI;UACnBC,iBAAiB,EAAEN,MAAM,CAACO,MAAM;UAChCC,WAAW,EAAE;QACf;MACF,CAAC,CAAC;IACJ,CAAC;IACDX,MAAM,CAACY,iBAAiB,CAACpC,IAAI,CAAC;EAChC,CAAC;EAED,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAM0B,SAAS,GAAG,IAAI;IACtB,MAAMC,UAAU,GAAGlC,aAAa,CAACE,OAAO;IAExC,IAAI,CAACgC,UAAU,IAAIA,UAAU,CAACC,UAAU,KAAK,CAAC,EAAE;MAC9C9B,OAAO,CAAC+B,IAAI,CAAC,yBAAyB,CAAC;MACvC;IACF;IAEA,MAAMC,KAAK,GAAGH,UAAU,CAACI,KAAK,CAAC,CAAC,EAAEL,SAAS,CAAC;IAC5CjC,aAAa,CAACE,OAAO,GAAGgC,UAAU,CAACI,KAAK,CAACL,SAAS,CAAC;IAEnDnC,MAAM,CAACI,OAAO,CAACa,IAAI,CAAC,UAAU,EAAE;MAC9BX,GAAG,EAAEL,SAAS,CAACG,OAAO;MACtBqB,MAAM,EAAEc;IACV,CAAC,CAAC;IAEF,MAAME,aAAa,GAAGvC,aAAa,CAACE,OAAO,CAACiC,UAAU;IACtDlC,WAAW,CACTS,IAAI,CAACC,KAAK,CACP,CAACjB,YAAY,CAACE,IAAI,CAAC4C,IAAI,GAAGD,aAAa,IAAI7C,YAAY,CAACE,IAAI,CAAC4C,IAAI,GAChE,GACJ,CACF,CAAC;EACH,CAAC;EAED,oBACErD,OAAA;IAAKsD,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBlD,YAAY,KAAK,aAAa,iBAC7BL,OAAA;MAAKsD,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCvD,OAAA;QAAAuD,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB3D,OAAA;QAAQ4D,OAAO,EAAElC,gBAAiB;QAAA6B,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtDxD,MAAM,iBAAIH,OAAA;QAAAuD,QAAA,GAAG,WAAS,EAACpD,MAAM;MAAA;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACN,EAEAtD,YAAY,KAAK,WAAW,iBAC3BL,OAAA;MAAKsD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BvD,OAAA;QAAAuD,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB3D,OAAA;QAAO6D,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEjC;MAAiB;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAChDpD,YAAY,CAACE,IAAI,iBAChBT,OAAA;QAAAuD,QAAA,gBACEvD,OAAA;UAAAuD,QAAA,EAAIhD,YAAY,CAACE,IAAI,CAACgC;QAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/B3D,OAAA;UAAAuD,QAAA,GAAG,YAAU,EAAC7C,QAAQ,EAAC,GAAC;QAAA;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzD,EAAA,CApHID,SAAS;AAAA8D,EAAA,GAAT9D,SAAS;AAsHf,eAAeA,SAAS;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}